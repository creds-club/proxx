{"version":3,"file":"index-7dfa68a0.js","sources":["../node_modules/comlink/dist/esm/comlink.mjs","../src/worker/gamelogic/index.ts","../src/worker/index.ts","../src/worker/state-service.ts"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst throwSet = new WeakSet();\r\nconst transferHandlers = new Map([\r\n    [\r\n        \"proxy\",\r\n        {\r\n            canHandle: obj => obj && obj[proxyMarker],\r\n            serialize(obj) {\r\n                const { port1, port2 } = new MessageChannel();\r\n                expose(obj, port1);\r\n                return [port2, [port2]];\r\n            },\r\n            deserialize: (port) => {\r\n                port.start();\r\n                return wrap(port);\r\n            }\r\n        }\r\n    ],\r\n    [\r\n        \"throw\",\r\n        {\r\n            canHandle: obj => throwSet.has(obj),\r\n            serialize(obj) {\r\n                const isError = obj instanceof Error;\r\n                let serialized = obj;\r\n                if (isError) {\r\n                    serialized = {\r\n                        isError,\r\n                        message: obj.message,\r\n                        stack: obj.stack\r\n                    };\r\n                }\r\n                return [serialized, []];\r\n            },\r\n            deserialize(obj) {\r\n                if (obj.isError) {\r\n                    throw Object.assign(new Error(), obj);\r\n                }\r\n                throw obj;\r\n            }\r\n        }\r\n    ]\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", (async (ev) => {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { path, id, type } = ev.data;\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = await rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = await rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = await new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.warn(\"Unrecognized message\", ev.data);\r\n            }\r\n        }\r\n        catch (e) {\r\n            returnValue = e;\r\n            throwSet.add(e);\r\n        }\r\n        const [wireValue, transferables] = toWireValue(returnValue);\r\n        ep.postMessage({ ...wireValue, id }, transferables);\r\n    }));\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction wrap(ep) {\r\n    return createProxy(ep);\r\n}\r\nfunction createProxy(ep, path = []) {\r\n    const proxy = new Proxy(new Function(), {\r\n        get(_target, prop) {\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop.toString()]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop.toString()],\r\n                value\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (path[path.length - 1] === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path,\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path,\r\n                argumentList\r\n            }, transferables).then(fromWireValue);\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self) {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, \"*\", transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context)\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue\r\n                },\r\n                transferables\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value\r\n        },\r\n        transferCache.get(value) || []\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise(resolve => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage({ id, ...msg }, transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { proxyMarker, transferHandlers, expose, wrap, transfer, proxy, windowEndpoint };\n//# sourceMappingURL=comlink.mjs.map\n","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nfunction newCell() {\n    return {\n        flagged: false,\n        hasMine: false,\n        revealed: false,\n        touchingFlags: 0,\n        touchingMines: 0\n    };\n}\nvar FLUSH_GRID_CHANGE_THRESHOLD = 10;\nvar MinesweeperGame = /** @class */ (function () {\n    function MinesweeperGame(_width, _height, _mines) {\n        this._width = _width;\n        this._height = _height;\n        this._mines = _mines;\n        this._playMode = 0 /* Pending */;\n        this._toReveal = 0;\n        this._flags = 0;\n        this._stateChange = {};\n        this._minedCells = [];\n        if (_mines < 1) {\n            throw Error(\"Invalid number of mines\");\n        }\n        if (_width < 1 || _height < 1) {\n            throw Error(\"Invalid dimensions\");\n        }\n        var maxMines = _width * _height - 9;\n        if (_mines > maxMines) {\n            throw Error(\"Number of mines cannot fit in grid\");\n        }\n        this._toReveal = _width * _height - _mines;\n        this.grid = Array(_height)\n            .fill(undefined)\n            .map(function () {\n            return Array(_width)\n                .fill(undefined)\n                .map(function () { return newCell(); });\n        });\n    }\n    Object.defineProperty(MinesweeperGame.prototype, \"toReveal\", {\n        get: function () {\n            return this._toReveal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MinesweeperGame.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MinesweeperGame.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MinesweeperGame.prototype, \"mines\", {\n        get: function () {\n            return this._mines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MinesweeperGame.prototype.subscribe = function (callback) {\n        this._changeCallback = callback;\n    };\n    MinesweeperGame.prototype.unsubscribe = function () {\n        this._changeCallback = undefined;\n    };\n    MinesweeperGame.prototype.reveal = function (x, y) {\n        if (this._playMode === 0 /* Pending */) {\n            this._placeMines(x, y);\n        }\n        else if (this._playMode !== 1 /* Playing */) {\n            throw Error(\"Game is not in a playable state\");\n        }\n        var cell = this.grid[y][x];\n        if (cell.flagged) {\n            throw Error(\"Cell flagged\");\n        }\n        this._reveal(x, y);\n        this._flushStateChange();\n    };\n    MinesweeperGame.prototype.setFlag = function (x, y, flagged) {\n        var e_1, _a, e_2, _b;\n        var cell = this.grid[y][x];\n        if (cell.revealed) {\n            throw Error(\"Revealed cell cannot be tagged\");\n        }\n        if (cell.flagged === flagged) {\n            return;\n        }\n        cell.flagged = flagged;\n        this._pushGridChange(x, y);\n        if (flagged) {\n            this._setFlags(this._flags + 1);\n            try {\n                for (var _c = tslib_1.__values(this._getSurrounding(x, y)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var _e = tslib_1.__read(_d.value, 2), nextX = _e[0], nextY = _e[1];\n                    var nextCell = this.grid[nextY][nextX];\n                    nextCell.touchingFlags++;\n                    // Emit this if it's just matched the number of mines\n                    if (nextCell.revealed &&\n                        nextCell.touchingFlags === nextCell.touchingMines) {\n                        this._pushGridChange(nextX, nextY);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        else {\n            this._setFlags(this._flags - 1);\n            try {\n                for (var _f = tslib_1.__values(this._getSurrounding(x, y)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                    var _h = tslib_1.__read(_g.value, 2), nextX = _h[0], nextY = _h[1];\n                    var nextCell = this.grid[nextY][nextX];\n                    nextCell.touchingFlags--;\n                    // Emit this if it's just gone under the number of mines\n                    if (nextCell.revealed &&\n                        nextCell.touchingFlags === nextCell.touchingMines - 1) {\n                        this._pushGridChange(nextX, nextY);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        this._flushStateChange();\n    };\n    /**\n     * Reveal squares around the point. Returns true if successful.\n     */\n    MinesweeperGame.prototype.attemptSurroundingReveal = function (x, y) {\n        var e_3, _a;\n        var cell = this.grid[y][x];\n        if (!cell.revealed ||\n            cell.touchingMines === 0 ||\n            cell.touchingMines > cell.touchingFlags) {\n            return false;\n        }\n        var revealedSomething = false;\n        try {\n            for (var _b = tslib_1.__values(this._getSurrounding(x, y)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = tslib_1.__read(_c.value, 2), nextX = _d[0], nextY = _d[1];\n                var nextCell = this.grid[nextY][nextX];\n                if (nextCell.flagged || nextCell.revealed) {\n                    continue;\n                }\n                revealedSomething = true;\n                this._reveal(nextX, nextY);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!revealedSomething) {\n            return false;\n        }\n        this._flushStateChange();\n        return true;\n    };\n    MinesweeperGame.prototype._flushStateChange = function () {\n        if (Object.keys(this._stateChange).length === 0) {\n            return;\n        }\n        if (!this._changeCallback) {\n            throw Error(\"No function present to emit with\");\n        }\n        this._changeCallback(this._stateChange);\n        this._stateChange = {};\n    };\n    MinesweeperGame.prototype._pushGridChange = function (x, y) {\n        if (!this._stateChange.gridChanges) {\n            this._stateChange.gridChanges = [];\n        }\n        this._stateChange.gridChanges.push([x, y, this.grid[y][x]]);\n        if (this._stateChange.gridChanges.length >= FLUSH_GRID_CHANGE_THRESHOLD) {\n            this._flushStateChange();\n        }\n    };\n    MinesweeperGame.prototype._setPlayMode = function (newMode) {\n        if (this._playMode === newMode) {\n            return;\n        }\n        this._playMode = newMode;\n        this._stateChange.playMode = newMode;\n    };\n    MinesweeperGame.prototype._setToReveal = function (newToReveal) {\n        if (this._toReveal === newToReveal) {\n            return;\n        }\n        this._toReveal = newToReveal;\n        this._stateChange.toReveal = newToReveal;\n    };\n    MinesweeperGame.prototype._setFlags = function (newFlags) {\n        if (this._flags === newFlags) {\n            return;\n        }\n        this._flags = newFlags;\n        this._stateChange.flags = newFlags;\n    };\n    MinesweeperGame.prototype._endGame = function (mode) {\n        this._setPlayMode(mode);\n    };\n    MinesweeperGame.prototype._placeMines = function (avoidX, avoidY) {\n        var e_4, _a, e_5, _b, e_6, _c;\n        var flatCellIndexes = new Array(this._width * this._height)\n            .fill(undefined)\n            .map(function (_, i) { return i; });\n        // Remove a 3x3 grid around the cell played.\n        var indexesToRemove = [avoidY * this._width + avoidX];\n        try {\n            for (var _d = tslib_1.__values(this._getSurrounding(avoidX, avoidY)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var _f = tslib_1.__read(_e.value, 2), nextX = _f[0], nextY = _f[1];\n                indexesToRemove.push(nextY * this._width + nextX);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        indexesToRemove.sort(function (a, b) { return a - b; });\n        try {\n            for (var _g = tslib_1.__values(indexesToRemove.entries()), _h = _g.next(); !_h.done; _h = _g.next()) {\n                var _j = tslib_1.__read(_h.value, 2), removed = _j[0], indexToRemove = _j[1];\n                flatCellIndexes.splice(indexToRemove - removed, 1);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        // Place mines in remaining squares\n        var minesToPlace = this._mines;\n        while (minesToPlace) {\n            var index = flatCellIndexes.splice(Math.floor(Math.random() * flatCellIndexes.length), 1)[0];\n            var x = index % this._width;\n            var y = (index - x) / this._width;\n            this.grid[y][x].hasMine = true;\n            this._minedCells.push([x, y]);\n            minesToPlace -= 1;\n            try {\n                for (var _k = (e_6 = void 0, tslib_1.__values(this._getSurrounding(x, y))), _l = _k.next(); !_l.done; _l = _k.next()) {\n                    var _m = tslib_1.__read(_l.value, 2), nextX = _m[0], nextY = _m[1];\n                    this.grid[nextY][nextX].touchingMines++;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        this._setPlayMode(1 /* Playing */);\n    };\n    MinesweeperGame.prototype._getSurrounding = function (x, y) {\n        var e_7, _a, e_8, _b;\n        var surrounding = [];\n        try {\n            for (var _c = tslib_1.__values([y - 1, y, y + 1]), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var nextY = _d.value;\n                if (nextY < 0) {\n                    continue;\n                }\n                if (nextY >= this._height) {\n                    continue;\n                }\n                try {\n                    for (var _e = (e_8 = void 0, tslib_1.__values([x - 1, x, x + 1])), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var nextX = _f.value;\n                        if (nextX < 0) {\n                            continue;\n                        }\n                        if (nextX >= this._width) {\n                            continue;\n                        }\n                        if (x === nextX && y === nextY) {\n                            continue;\n                        }\n                        surrounding.push([nextX, nextY]);\n                    }\n                }\n                catch (e_8_1) { e_8 = { error: e_8_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_8) throw e_8.error; }\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return surrounding;\n    };\n    /**\n     * When the user loses, reveal all the mines.\n     */\n    MinesweeperGame.prototype._revealAllMines = function (initialX, initialY) {\n        var e_9, _a;\n        // Ensure we push the clicked mine first.\n        var initialCell = this.grid[initialY][initialX];\n        initialCell.revealed = true;\n        this._pushGridChange(initialX, initialY);\n        try {\n            for (var _b = tslib_1.__values(this._minedCells), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = tslib_1.__read(_c.value, 2), x = _d[0], y = _d[1];\n                var cell = this.grid[y][x];\n                if (cell === initialCell) {\n                    continue;\n                }\n                cell.revealed = true;\n                this._pushGridChange(x, y);\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n    };\n    /**\n     * @param x\n     * @param y\n     */\n    MinesweeperGame.prototype._reveal = function (x, y) {\n        var e_10, _a, e_11, _b;\n        // The set contains the cell position as if it were a single flat array.\n        var revealSet = new Set([x + y * this._width]);\n        try {\n            for (var revealSet_1 = tslib_1.__values(revealSet), revealSet_1_1 = revealSet_1.next(); !revealSet_1_1.done; revealSet_1_1 = revealSet_1.next()) {\n                var value = revealSet_1_1.value;\n                var x_1 = value % this._width;\n                var y_1 = (value - x_1) / this._width;\n                var cell = this.grid[y_1][x_1];\n                if (cell.revealed) {\n                    throw Error(\"Cell already revealed\");\n                }\n                if (cell.hasMine) {\n                    this._revealAllMines(x_1, y_1);\n                    this._endGame(2 /* Lost */);\n                    break;\n                }\n                cell.revealed = true;\n                this._pushGridChange(x_1, y_1);\n                this._setToReveal(this._toReveal - 1);\n                if (this._toReveal === 0) {\n                    this._endGame(3 /* Won */);\n                    break;\n                }\n                // Don't reveal the surrounding squares if this is touching a mine.\n                if (cell.touchingMines) {\n                    continue;\n                }\n                try {\n                    for (var _c = (e_11 = void 0, tslib_1.__values(this._getSurrounding(x_1, y_1))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var _e = tslib_1.__read(_d.value, 2), nextX = _e[0], nextY = _e[1];\n                        var nextCell = this.grid[nextY][nextX];\n                        if (!nextCell.revealed && !nextCell.flagged) {\n                            revealSet.add(nextX + nextY * this._width);\n                        }\n                    }\n                }\n                catch (e_11_1) { e_11 = { error: e_11_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_11) throw e_11.error; }\n                }\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (revealSet_1_1 && !revealSet_1_1.done && (_a = revealSet_1.return)) _a.call(revealSet_1);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        this._flushStateChange();\n    };\n    return MinesweeperGame;\n}());\nexport default MinesweeperGame;\n//# sourceMappingURL=index.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { expose, proxy, proxyMarker } from \"comlink\";\nimport StateService from \"./state-service\";\nvar services = {\n    stateService: proxy(new StateService())\n};\nexpose(services, self);\nperformance.mark(\"State ready\");\naddEventListener(\"message\", function (event) {\n    if (event.data === \"ready?\") {\n        self.postMessage(\"READY\");\n    }\n});\nself.postMessage(\"READY\");\n//# sourceMappingURL=index.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MinesweeperGame from \"./gamelogic\";\nfunction StateChangeEventFactory(typeArg, eventInitDict) {\n    var evt = new Event(typeArg, eventInitDict);\n    evt.stateChange = eventInitDict.stateChange;\n    Object.setPrototypeOf(evt, Event.prototype);\n    return evt;\n}\nvar StateService = /** @class */ (function () {\n    function StateService() {\n        this._eventTarget = new MessageChannel().port1;\n    }\n    StateService.prototype.initGame = function (width, height, numBombs) {\n        var _this = this;\n        var gameActiveChange = false;\n        if (this._game) {\n            this._game.unsubscribe();\n        }\n        else {\n            gameActiveChange = true;\n        }\n        this._game = new MinesweeperGame(width, height, numBombs);\n        if (gameActiveChange) {\n            this._notify({\n                game: {\n                    width: width,\n                    height: height,\n                    mines: numBombs,\n                    toRevealTotal: this._game.toReveal,\n                    id: Math.random()\n                }\n            });\n        }\n        this._game.subscribe(function (stateChange) {\n            _this._notify({ gameStateChange: stateChange });\n        });\n    };\n    StateService.prototype.subscribe = function (callback) {\n        this._eventTarget.addEventListener(\"state-update\", function (event) {\n            callback(event.stateChange);\n        });\n    };\n    StateService.prototype.reset = function () {\n        if (!this._game) {\n            return;\n        }\n        this._game.unsubscribe();\n        this._game = undefined;\n        this._notify({ game: undefined });\n    };\n    StateService.prototype.restart = function () {\n        if (!this._game) {\n            return;\n        }\n        this._game.unsubscribe();\n        var oldGame = this._game;\n        this._game = undefined;\n        this.initGame(oldGame.width, oldGame.height, oldGame.mines);\n    };\n    StateService.prototype.flag = function (x, y) {\n        this._game.setFlag(x, y, true);\n    };\n    StateService.prototype.unflag = function (x, y) {\n        this._game.setFlag(x, y, false);\n    };\n    StateService.prototype.reveal = function (x, y) {\n        this._game.reveal(x, y);\n    };\n    StateService.prototype.revealSurrounding = function (x, y) {\n        this._game.attemptSurroundingReveal(x, y);\n    };\n    StateService.prototype._notify = function (stateChange) {\n        this._eventTarget.dispatchEvent(\n        // @ts-ignore\n        StateChangeEventFactory(\"state-update\", { stateChange: stateChange }));\n    };\n    return StateService;\n}());\nexport default StateService;\n//# sourceMappingURL=state-service.js.map"],"names":["proxyMarker","Symbol","throwSet","WeakSet","transferHandlers","Map","canHandle","obj","[object Object]","port1","port2","MessageChannel","expose","deserialize","port","start","ep","createProxy","path","proxy","Proxy","Function","_target","prop","length","then","r","requestResponseMessage","type","fromWireValue","bind","toString","rawValue","value","transferables","toWireValue","_thisArg","rawArgumentList","slice","argumentList","processArguments","wrap","has","isError","Error","serialized","message","stack","Object","assign","self","addEventListener","ev","data","id","map","returnValue","parent","reduce","apply","console","warn","e","add","wireValue","postMessage","processed","v","arr","Array","prototype","concat","transferCache","WeakMap","name","handler","serializedValue","serialize","get","msg","transfers","Promise","resolve","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","removeEventListener","MinesweeperGame","_width","_height","_mines","this","_playMode","_toReveal","_flags","_stateChange","_minedCells","grid","undefined","flagged","hasMine","revealed","touchingFlags","touchingMines","defineProperty","enumerable","configurable","subscribe","callback","_changeCallback","unsubscribe","reveal","x","y","_placeMines","_reveal","_flushStateChange","setFlag","e_1","_a","e_2","_b","cell","_pushGridChange","_setFlags","_c","tslib_1.__values","_getSurrounding","_d","next","done","_e","tslib_1.__read","nextX","nextY","nextCell","e_1_1","error","return","call","_f","_g","_h","e_2_1","attemptSurroundingReveal","e_3","revealedSomething","e_3_1","keys","gridChanges","push","_setPlayMode","newMode","playMode","_setToReveal","newToReveal","toReveal","newFlags","flags","_endGame","mode","avoidX","avoidY","e_4","e_5","e_6","flatCellIndexes","_","i","indexesToRemove","e_4_1","sort","a","b","entries","_j","removed","indexToRemove","splice","e_5_1","minesToPlace","index","_k","_l","_m","e_6_1","e_7","e_8","surrounding","e_8_1","e_7_1","_revealAllMines","initialX","initialY","e_9","initialCell","e_9_1","e_10","e_11","revealSet","Set","revealSet_1","revealSet_1_1","x_1","y_1","e_11_1","e_10_1","stateService","StateService","_eventTarget","initGame","width","height","numBombs","_this","gameActiveChange","_game","_notify","game","mines","toRevealTotal","stateChange","gameStateChange","event","reset","restart","oldGame","flag","unflag","revealSurrounding","eventInitDict","evt","dispatchEvent","Event","setPrototypeOf","performance","mark"],"mappings":"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"}