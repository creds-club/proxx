{"version":3,"file":"index-7416a412.js","sources":["../src/main/rendering/canvas-2d-renderer/index.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { getCanvas } from \"src/main/utils/canvas-pool\";\nimport { getBarHeights, getCellSizes } from \"src/main/utils/cell-sizing\";\nimport { staticDevicePixelRatio } from \"src/main/utils/static-display\";\nimport { idleAnimationTextureDrawer, processDoneCallback, staticTextureDrawer } from \"../animation\";\nimport { easeInOutCubic, easeOutQuad, remap } from \"../animation-helpers\";\nimport { fadedLinesAlpha, fadeInAnimationLength, fadeOutAnimationLength, flashInAnimationLength, flashOutAnimationLength, idleAnimationLength, idleAnimationNumFrames, revealedAlpha, turquoise } from \"../constants\";\nimport { getTime } from \"../time-provider\";\nvar Canvas2DRenderer = /** @class */ (function () {\n    function Canvas2DRenderer() {\n        this._grid = [];\n        this._lastFocus = [-1, -1];\n    }\n    Object.defineProperty(Canvas2DRenderer.prototype, \"numTiles\", {\n        get: function () {\n            return this._numTilesX * this._numTilesY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Canvas2DRenderer.prototype.createCanvas = function () {\n        this._canvas = getCanvas(\"2d\");\n        this._ctx = this._canvas.getContext(\"2d\");\n        if (!this._ctx) {\n            throw Error(\"Could not instantiate 2D renderer\");\n        }\n        return this._canvas;\n    };\n    Canvas2DRenderer.prototype.init = function (numTilesX, numTilesY) {\n        this._numTilesX = numTilesX;\n        this._numTilesY = numTilesY;\n        this._updateTileSize();\n        this._initGrid();\n        this.onResize();\n    };\n    Canvas2DRenderer.prototype.updateFirstRect = function (rect) {\n        this._firstCellRect = rect;\n        this._rerender();\n    };\n    Canvas2DRenderer.prototype.stop = function () {\n        // Nothing to do here\n    };\n    Canvas2DRenderer.prototype.onResize = function () {\n        if (!this._canvas) {\n            return;\n        }\n        this._updateTileSize();\n        this._canvasRect = this._canvas.getBoundingClientRect();\n        this._canvas.width = this._canvasRect.width * staticDevicePixelRatio;\n        this._canvas.height = this._canvasRect.height * staticDevicePixelRatio;\n        this._prepareGradients();\n        this._rerender();\n    };\n    Canvas2DRenderer.prototype.beforeUpdate = function () {\n        // Nothing to do here\n    };\n    Canvas2DRenderer.prototype.afterUpdate = function () {\n        this._rerender();\n    };\n    Canvas2DRenderer.prototype.beforeCell = function (x, y, cell, animationList, ts) {\n        var gridCell = this._grid[y * this._numTilesX + x];\n        gridCell.animationList = animationList.slice();\n        gridCell.cell = cell;\n    };\n    Canvas2DRenderer.prototype.afterCell = function (x, y, cell, animationList, ts) {\n        this._maybeRenderFocusRing(x, y);\n    };\n    Canvas2DRenderer.prototype.render = function (x, y, cell, animation, ts) {\n        // Nothing to do here, ironically.\n        // With the 2D renderer, we render the entire field after the entire chunk\n        // has been ingested and call _renderCell for each cell.\n    };\n    Canvas2DRenderer.prototype.setFocus = function (x, y) {\n        this._lastFocus = [x, y];\n        this._rerender();\n    };\n    Canvas2DRenderer.prototype._renderCell = function (x, y, cell, animation, ts) {\n        if (!this._isTileInView(x, y)) {\n            return;\n        }\n        this._ctx.save();\n        this._setupContextForTile(x, y);\n        // @ts-ignore\n        this[animation.name](x, y, cell, animation, ts);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype._updateTileSize = function () {\n        var _a = getCellSizes(), cellPadding = _a.cellPadding, cellSize = _a.cellSize;\n        // This does _not_ need to get multiplied by `devicePixelRatio` as we will\n        // be scaling the canvas instead.\n        this._tileSize = cellSize + 2 * cellPadding;\n    };\n    Canvas2DRenderer.prototype._initGrid = function () {\n        var start = getTime();\n        this._grid = new Array(this.numTiles);\n        for (var y = 0; y < this._numTilesY; y++) {\n            for (var x = 0; x < this._numTilesX; x++) {\n                this._grid[y * this._numTilesX + x] = {\n                    animationList: [\n                        {\n                            name: 0 /* IDLE */,\n                            start: start\n                        }\n                    ],\n                    x: x,\n                    y: y\n                };\n            }\n        }\n    };\n    Canvas2DRenderer.prototype._setupContextForTile = function (x, y) {\n        this._ctx.scale(staticDevicePixelRatio, staticDevicePixelRatio);\n        // Adjust for scroll position\n        this._ctx.translate(this._firstCellRect.left, this._firstCellRect.top);\n        // Put tile that is supposed to be rendered at (0, 0)\n        this._ctx.translate(x * this._tileSize, y * this._tileSize);\n    };\n    Canvas2DRenderer.prototype._isTileInView = function (bx, by) {\n        if (!this._firstCellRect) {\n            return false;\n        }\n        var _a = this._firstCellRect, left = _a.left, top = _a.top, width = _a.width, height = _a.height;\n        var x = bx * width + left;\n        var y = by * height + top;\n        if (x + width < 0 ||\n            y + height < 0 ||\n            x > this._canvasRect.width ||\n            y > this._canvasRect.height) {\n            return false;\n        }\n        return true;\n    };\n    Canvas2DRenderer.prototype[0 /* IDLE */] = function (x, y, cell, animation, ts) {\n        var animationLength = idleAnimationLength;\n        var normalized = ((ts - animation.start) / animationLength) % 1;\n        var idx = Math.floor(normalized * idleAnimationNumFrames);\n        var fadeInNormalized = (ts - (animation.fadeStart || 0)) / fadeInAnimationLength;\n        if (fadeInNormalized > 1) {\n            fadeInNormalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalAlpha = remap(0, 1, 1, fadedLinesAlpha, easeOutQuad(fadeInNormalized));\n        idleAnimationTextureDrawer(idx, this._ctx, this._tileSize);\n        this._ctx.globalAlpha = 1;\n        staticTextureDrawer(0 /* OUTLINE */, this._ctx, this._tileSize);\n        staticTextureDrawer(12 /* INNER_CIRCLE */, this._ctx, this._tileSize);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[6 /* FLAGGED */] = function (x, y, cell, animation, ts) {\n        var animationLength = idleAnimationLength;\n        var normalized = ((ts - animation.start) / animationLength) % 1;\n        var idx = Math.floor(normalized * idleAnimationNumFrames);\n        var fadeOutNormalized = (ts - (animation.fadeStart || 0)) / fadeOutAnimationLength;\n        if (fadeOutNormalized > 1) {\n            fadeOutNormalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalAlpha = remap(0, 1, fadedLinesAlpha, 1, easeOutQuad(fadeOutNormalized));\n        idleAnimationTextureDrawer(idx, this._ctx, this._tileSize);\n        this._ctx.globalAlpha = 1;\n        staticTextureDrawer(0 /* OUTLINE */, this._ctx, this._tileSize);\n        staticTextureDrawer(12 /* INNER_CIRCLE */, this._ctx, this._tileSize);\n        staticTextureDrawer(13 /* DOT */, this._ctx, this._tileSize);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[5 /* NUMBER */] = function (x, y, cell, animation, ts) {\n        this._ctx.save();\n        if (cell.touchingMines > 0) {\n            staticTextureDrawer(cell.touchingMines, this._ctx, this._tileSize);\n        }\n        else {\n            this._ctx.globalAlpha = revealedAlpha;\n            staticTextureDrawer(0 /* OUTLINE */, this._ctx, this._tileSize);\n        }\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[7 /* MINED */] = function (x, y, cell, animation, ts) {\n        if (animation.start > ts) {\n            return;\n        }\n        staticTextureDrawer(10 /* MINE */, this._ctx, this._tileSize);\n    };\n    Canvas2DRenderer.prototype[3 /* HIGHLIGHT_IN */] = function (x, y, cell, animation, ts) {\n        var start = animation.fadeStart || animation.start;\n        var animationLength = fadeInAnimationLength;\n        var normalized = (ts - start) / animationLength;\n        if (normalized < 0) {\n            normalized = 0;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalCompositeOperation = \"source-atop\";\n        this._ctx.globalAlpha = easeOutQuad(normalized);\n        this._ctx.fillStyle = turquoise;\n        this._ctx.fillRect(0, 0, this._firstCellRect.width, this._firstCellRect.height);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[4 /* HIGHLIGHT_OUT */] = function (x, y, cell, animation, ts) {\n        var start = animation.fadeStart || animation.start;\n        var animationLength = fadeOutAnimationLength;\n        var normalized = (ts - start) / animationLength;\n        if (normalized < 0) {\n            normalized = 0;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalCompositeOperation = \"source-atop\";\n        this._ctx.globalAlpha = 1 - easeOutQuad(normalized);\n        this._ctx.fillStyle = turquoise;\n        this._ctx.fillRect(0, 0, this._firstCellRect.width, this._firstCellRect.height);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[1 /* FLASH_IN */] = function (x, y, cell, animation, ts) {\n        var animationLength = flashInAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            return;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalAlpha = easeOutQuad(normalized);\n        staticTextureDrawer(9 /* FLASH */, this._ctx, this._tileSize);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype[2 /* FLASH_OUT */] = function (x, y, cell, animation, ts) {\n        var animationLength = flashOutAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            return;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        this._ctx.save();\n        this._ctx.globalAlpha = 1 - easeInOutCubic(normalized);\n        staticTextureDrawer(9 /* FLASH */, this._ctx, this._tileSize);\n        this._ctx.restore();\n    };\n    Canvas2DRenderer.prototype._rerender = function () {\n        var e_1, _a;\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        for (var y = 0; y < this._numTilesY; y++) {\n            for (var x = 0; x < this._numTilesX; x++) {\n                var _b = this._grid[y * this._numTilesX + x], cell = _b.cell, animationList = _b.animationList;\n                var ts = getTime();\n                try {\n                    for (var animationList_1 = (e_1 = void 0, tslib_1.__values(animationList)), animationList_1_1 = animationList_1.next(); !animationList_1_1.done; animationList_1_1 = animationList_1.next()) {\n                        var animation = animationList_1_1.value;\n                        this._renderCell(x, y, cell, animation, ts);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (animationList_1_1 && !animationList_1_1.done && (_a = animationList_1.return)) _a.call(animationList_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                this._maybeRenderFocusRing(x, y);\n            }\n        }\n        this._drawFadeOut();\n    };\n    Canvas2DRenderer.prototype._drawFadeOut = function () {\n        var e_2, _a;\n        var ctx = this._ctx;\n        ctx.save();\n        ctx.scale(staticDevicePixelRatio, staticDevicePixelRatio);\n        ctx.globalCompositeOperation = \"destination-out\";\n        try {\n            for (var _b = tslib_1.__values(this._gradients), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = _c.value, gradient = _d.gradient, rect = _d.rect;\n                ctx.fillStyle = gradient;\n                this._ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        ctx.restore();\n    };\n    Canvas2DRenderer.prototype._prepareGradients = function () {\n        var ctx = this._ctx;\n        ctx.save();\n        ctx.scale(staticDevicePixelRatio, staticDevicePixelRatio);\n        var _a = getBarHeights(), topBarHeight = _a.topBarHeight, bottomBarHeight = _a.bottomBarHeight;\n        var _b = this._canvasRect, width = _b.width, height = _b.height;\n        var factor = 1.3;\n        var gradients = [\n            // Top border gradient\n            {\n                start: [0, topBarHeight],\n                end: [0, topBarHeight * factor],\n                rect: new DOMRect(0, 0, width, topBarHeight * factor)\n            },\n            // Bottom border gradient\n            {\n                start: [width, height - bottomBarHeight],\n                end: [width, height - bottomBarHeight * factor],\n                rect: new DOMRect(0, height - bottomBarHeight * factor, width, bottomBarHeight * factor)\n            }\n        ];\n        this._gradients = gradients.map(function (_a) {\n            var start = _a.start, end = _a.end, rect = _a.rect;\n            var gradient = ctx.createLinearGradient(start[0], start[1], end[0], end[1]);\n            // Implement the same opacity ramp as we have in the WebGL shader.\n            var numStops = 10;\n            for (var i = 0; i < numStops; i++) {\n                var f = i / (numStops - 1);\n                gradient.addColorStop(f, \"rgba(255, 255, 255, \" + (1 - easeInOutCubic(f)) + \")\");\n            }\n            return { gradient: gradient, rect: rect };\n        });\n        ctx.restore();\n    };\n    Canvas2DRenderer.prototype._rerenderCell = function (x, y, _a) {\n        var e_3, _b;\n        var _c = (_a === void 0 ? {} : _a).clear, clear = _c === void 0 ? false : _c;\n        if (clear) {\n            this._ctx.save();\n            this._setupContextForTile(x, y);\n            this._ctx.clearRect(0, 0, this._tileSize, this._tileSize);\n            this._ctx.restore();\n        }\n        var _d = this._grid[y * this._numTilesX + x], cell = _d.cell, animationList = _d.animationList;\n        var ts = getTime();\n        try {\n            for (var animationList_2 = tslib_1.__values(animationList), animationList_2_1 = animationList_2.next(); !animationList_2_1.done; animationList_2_1 = animationList_2.next()) {\n                var animation = animationList_2_1.value;\n                this._renderCell(x, y, cell, animation, ts);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (animationList_2_1 && !animationList_2_1.done && (_b = animationList_2.return)) _b.call(animationList_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this._maybeRenderFocusRing(x, y);\n    };\n    Canvas2DRenderer.prototype._maybeRenderFocusRing = function (x, y) {\n        if (this._lastFocus[0] !== x || this._lastFocus[1] !== y) {\n            return;\n        }\n        this._ctx.save();\n        this._setupContextForTile(x, y);\n        staticTextureDrawer(11 /* FOCUS */, this._ctx, this._tileSize);\n        this._ctx.restore();\n    };\n    return Canvas2DRenderer;\n}());\nexport default Canvas2DRenderer;\n//# sourceMappingURL=index.js.map"],"names":["Canvas2DRenderer","this","_grid","_lastFocus","Object","defineProperty","prototype","get","_numTilesX","_numTilesY","enumerable","configurable","createCanvas","_canvas","getCanvas","_ctx","getContext","Error","init","numTilesX","numTilesY","_updateTileSize","_initGrid","onResize","updateFirstRect","rect","_firstCellRect","_rerender","stop","_canvasRect","getBoundingClientRect","width","staticDevicePixelRatio","height","_prepareGradients","beforeUpdate","afterUpdate","beforeCell","x","y","cell","animationList","ts","gridCell","slice","afterCell","_maybeRenderFocusRing","render","animation","setFocus","_renderCell","_isTileInView","save","_setupContextForTile","name","restore","_a","getCellSizes","cellPadding","cellSize","_tileSize","start","getTime","Array","numTiles","scale","translate","left","top","bx","by","animationLength","idleAnimationLength","normalized","idx","Math","floor","idleAnimationNumFrames","fadeInNormalized","fadeStart","fadeInAnimationLength","globalAlpha","remap","fadedLinesAlpha","easeOutQuad","idleAnimationTextureDrawer","staticTextureDrawer","fadeOutNormalized","fadeOutAnimationLength","touchingMines","revealedAlpha","processDoneCallback","globalCompositeOperation","fillStyle","turquoise","fillRect","flashInAnimationLength","flashOutAnimationLength","easeInOutCubic","e_1","clearRect","_b","animationList_1","tslib_1.__values","animationList_1_1","next","done","value","e_1_1","error","return","call","_drawFadeOut","e_2","ctx","_gradients","_c","_d","gradient","e_2_1","getBarHeights","topBarHeight","bottomBarHeight","gradients","end","DOMRect","map","createLinearGradient","i","f","addColorStop","_rerenderCell","e_3","clear","animationList_2","animationList_2_1","e_3_1"],"mappings":"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"}