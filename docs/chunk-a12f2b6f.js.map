{"version":3,"file":"chunk-a12f2b6f.js","sources":["../src/utils/scheduling.ts","../src/main/utils/to-selector.ts","../src/main/utils/cell-sizing.ts","../src/main/rendering/texture-cache.ts","../src/main/rendering/canvas-helper.ts","../src/main/rendering/animation.ts","../src/main/rendering/texture-generators.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function nextEvent(ev, evt) {\n    return new Promise(function (resolve) {\n        return ev.addEventListener(evt, resolve, { once: true });\n    });\n}\nvar _a = new MessageChannel(), port1 = _a.port1, port2 = _a.port2;\nport2.start();\nexport function task() {\n    return new Promise(function (resolve) {\n        var uid = Math.random();\n        port2.addEventListener(\"message\", function f(ev) {\n            if (ev.data !== uid) {\n                return;\n            }\n            port2.removeEventListener(\"message\", f);\n            resolve();\n        });\n        port1.postMessage(uid);\n    });\n}\n//# sourceMappingURL=scheduling.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Turns a CSS modules class string into a selector.\nexport default function toSelector(classList) {\n    return classList\n        .split(\" \")\n        .map(function (k) { return \".\" + k; })\n        .join(\"\");\n}\n//# sourceMappingURL=to-selector.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bottomBar as bottomBarStyle } from \"../services/preact-canvas/components/bottom-bar/style.css\";\nimport { topBar as topBarStyle } from \"../services/preact-canvas/components/top-bar/style.css\";\nimport toSelector from \"./to-selector\";\nexport function getCellSizes() {\n    var cellPadding = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--cell-padding\"));\n    var cellSize = parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--cell-size\"));\n    return { cellSize: cellSize, cellPadding: cellPadding };\n}\nexport function getBarHeights() {\n    var bottomBar = document.querySelector(toSelector(bottomBarStyle));\n    var bottomBarRect = bottomBar.getBoundingClientRect();\n    var bottomBarMargins = parseFloat(getComputedStyle(bottomBar).marginTop || \"0\") +\n        parseFloat(getComputedStyle(bottomBar).marginBottom || \"0\");\n    var bottomBarHeight = bottomBarRect.height + bottomBarMargins;\n    // The top bar has a margin\n    var topBar = document.querySelector(toSelector(topBarStyle));\n    var topBarRect = topBar.getBoundingClientRect();\n    var topBarMargins = parseFloat(getComputedStyle(topBar).marginTop || \"0\") +\n        parseFloat(getComputedStyle(topBar).marginBottom || \"0\");\n    var topBarHeight = topBarRect.height + topBarMargins;\n    return { topBarHeight: topBarHeight, bottomBarHeight: bottomBarHeight };\n}\n//# sourceMappingURL=cell-sizing.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport version from \"consts:version\";\nimport { del, get, set } from \"idb-keyval\";\nimport { noCache } from \"src/main/utils/constants\";\nimport { task } from \"../../utils/scheduling\";\nimport { staticDevicePixelRatio } from \"../utils/static-display\";\nvar defaultSizeConstraints = {\n    // Allegedly, Chrome, Firefox and Safari have a maximum canvas size of 32k\n    // pixels. We are *definitely* below that, but for some reason the draws to\n    // the sprite sheet just seem to stop happening at higher indices when\n    // tileSize is big (due to high dPR for exampe). The maxWidth of 8192 has been\n    // determined by trial and error and seems to be safe.\n    maxWidth: 8192,\n    maxHeight: 32768\n};\nvar TEXTURE_CACHE_IDB_PREFIX = \"texturecache\";\n// Wraps an existing TextureGenerator and caches the generated\n// frames in an img.\nexport function cacheTextureGenerator(name, drawTexture, textureSize, numFrames, constraints) {\n    if (constraints === void 0) { constraints = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var fullConstraints, maxFramesPerRow, maxRowsPerSprite, maxFramesPerSprite, buffers, prefix, expectedVersion, cachedTextureVersion, caches, _loop_1, i, drawer;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fullConstraints = tslib_1.__assign({}, defaultSizeConstraints, constraints);\n                    maxFramesPerRow = Math.floor(fullConstraints.maxWidth / (textureSize * staticDevicePixelRatio));\n                    maxRowsPerSprite = Math.floor(fullConstraints.maxHeight / (textureSize * staticDevicePixelRatio));\n                    maxFramesPerSprite = maxFramesPerRow * maxRowsPerSprite;\n                    prefix = TEXTURE_CACHE_IDB_PREFIX + \":\" + name;\n                    expectedVersion = version + \":\" + textureSize + \":\" + staticDevicePixelRatio;\n                    return [4 /*yield*/, get(prefix + \":version\")];\n                case 1:\n                    cachedTextureVersion = _a.sent();\n                    if (!(cachedTextureVersion !== expectedVersion || noCache)) return [3 /*break*/, 7];\n                    return [4 /*yield*/, del(prefix + \":version\")];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, del(prefix + \":buffers\")];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, createBuffers(drawTexture, textureSize, numFrames, fullConstraints)];\n                case 4:\n                    buffers = _a.sent();\n                    return [4 /*yield*/, set(prefix + \":version\", expectedVersion)];\n                case 5:\n                    _a.sent();\n                    return [4 /*yield*/, set(prefix + \":buffers\", buffers)];\n                case 6:\n                    _a.sent();\n                    return [3 /*break*/, 9];\n                case 7: return [4 /*yield*/, get(prefix + \":buffers\")];\n                case 8:\n                    buffers = _a.sent();\n                    _a.label = 9;\n                case 9:\n                    caches = new Array(buffers.length);\n                    _loop_1 = function (i) {\n                        var image;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    image = new Image();\n                                    image.src = URL.createObjectURL(new Blob([buffers[i]], { type: \"image/png\" }));\n                                    return [4 /*yield*/, new Promise(function (r) { return (image.onload = r); })];\n                                case 1:\n                                    _a.sent();\n                                    caches[i] = image;\n                                    return [4 /*yield*/, task()];\n                                case 2:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    i = 0;\n                    _a.label = 10;\n                case 10:\n                    if (!(i < buffers.length)) return [3 /*break*/, 13];\n                    return [5 /*yield**/, _loop_1(i)];\n                case 11:\n                    _a.sent();\n                    _a.label = 12;\n                case 12:\n                    i++;\n                    return [3 /*break*/, 10];\n                case 13:\n                    drawer = function (idx, targetCtx, cellSize) {\n                        idx = Math.floor(idx % numFrames);\n                        var sprite = Math.floor(idx / maxFramesPerSprite);\n                        var idxInSprite = idx % maxFramesPerSprite;\n                        var xIndex = idxInSprite % maxFramesPerRow;\n                        var yIndex = Math.floor(idxInSprite / maxFramesPerRow);\n                        var img = caches[sprite];\n                        var x = xIndex * textureSize;\n                        var y = yIndex * textureSize;\n                        targetCtx.drawImage(img, x * staticDevicePixelRatio, y * staticDevicePixelRatio, textureSize * staticDevicePixelRatio, textureSize * staticDevicePixelRatio, 0, 0, cellSize, cellSize);\n                    };\n                    return [2 /*return*/, { drawer: drawer, caches: caches }];\n            }\n        });\n    });\n}\nfunction createBuffers(drawTexture, textureSize, numFrames, constraints) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var maxWidth, maxHeight, maxFramesPerRow, maxRowsPerSprite, maxFramesPerSprite, numSprites, buffers, _loop_2, spriteIndex;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    maxWidth = constraints.maxWidth, maxHeight = constraints.maxHeight;\n                    maxFramesPerRow = Math.floor(maxWidth / (textureSize * staticDevicePixelRatio));\n                    maxRowsPerSprite = Math.floor(maxHeight / (textureSize * staticDevicePixelRatio));\n                    maxFramesPerSprite = maxFramesPerRow * maxRowsPerSprite;\n                    numSprites = Math.ceil(numFrames / maxFramesPerSprite);\n                    buffers = [];\n                    _loop_2 = function (spriteIndex) {\n                        var framesLeftToCache, width, height, canvas, ctx, indexInSprite, frame, xIndex, yIndex, x, y, blob, buffer;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    framesLeftToCache = numFrames - spriteIndex * maxFramesPerSprite;\n                                    width = maxWidth;\n                                    height = maxHeight;\n                                    canvas = document.createElement(\"canvas\");\n                                    canvas.width = width;\n                                    canvas.height = height;\n                                    ctx = canvas.getContext(\"2d\");\n                                    if (!ctx) {\n                                        throw Error(\"Could not instantiate 2D rendering context\");\n                                    }\n                                    ctx.scale(staticDevicePixelRatio, staticDevicePixelRatio);\n                                    indexInSprite = 0;\n                                    _a.label = 1;\n                                case 1:\n                                    if (!(indexInSprite < framesLeftToCache && indexInSprite < maxFramesPerSprite)) return [3 /*break*/, 4];\n                                    frame = spriteIndex * maxFramesPerSprite + indexInSprite;\n                                    xIndex = indexInSprite % maxFramesPerRow;\n                                    yIndex = Math.floor(indexInSprite / maxFramesPerRow);\n                                    x = xIndex * textureSize;\n                                    y = yIndex * textureSize;\n                                    ctx.save();\n                                    ctx.translate(x, y);\n                                    drawTexture(frame, ctx);\n                                    ctx.restore();\n                                    // Await a task to give the main thread a chance to breathe.\n                                    return [4 /*yield*/, task()];\n                                case 2:\n                                    // Await a task to give the main thread a chance to breathe.\n                                    _a.sent();\n                                    _a.label = 3;\n                                case 3:\n                                    indexInSprite++;\n                                    return [3 /*break*/, 1];\n                                case 4: return [4 /*yield*/, new Promise(function (r) {\n                                        return canvas.toBlob(r, \"image/png\");\n                                    })];\n                                case 5:\n                                    blob = _a.sent();\n                                    return [4 /*yield*/, new Response(blob).arrayBuffer()];\n                                case 6:\n                                    buffer = _a.sent();\n                                    buffers.push(buffer);\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    spriteIndex = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(spriteIndex < numSprites)) return [3 /*break*/, 4];\n                    return [5 /*yield**/, _loop_2(spriteIndex)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    spriteIndex++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/, buffers];\n            }\n        });\n    });\n}\n//# sourceMappingURL=texture-cache.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function roundedRectangle(ctx, x, y, width, height, radius) {\n    ctx.beginPath();\n    ctx.moveTo(x, y + radius);\n    // Top left corner\n    ctx.arc(x + radius, y + radius, radius, -Math.PI, -Math.PI / 2, false);\n    // Top edge\n    ctx.lineTo(x + width - radius, y);\n    // Top right corner\n    ctx.arc(x + width - radius, y + radius, radius, -Math.PI / 2, 0, false);\n    // Right edge\n    ctx.lineTo(x + width, y + height - radius);\n    // Bottom right corner\n    ctx.arc(x + width - radius, y + height - radius, radius, 0, Math.PI / 2, false);\n    // Bottom edge\n    ctx.lineTo(x + width - radius, y + height);\n    // Bottom left corner\n    ctx.arc(x + radius, y + height - radius, radius, Math.PI / 2, Math.PI, false);\n    ctx.closePath();\n}\n//# sourceMappingURL=canvas-helper.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { getCellSizes } from \"src/main/utils/cell-sizing\";\nimport { idleAnimationNumFrames, spriteSize } from \"./constants\";\nimport { cacheTextureGenerator } from \"./texture-cache\";\nimport { idleAnimationTextureGeneratorFactory, staticTextureGeneratorFactory } from \"./texture-generators\";\n// Calls and unsets the `done` callback if available.\nexport function processDoneCallback(animation) {\n    if (!animation.done) {\n        return;\n    }\n    animation.done();\n    delete animation.done;\n}\nexport var textureTileSize = null;\nexport var idleAnimationTextureDrawer = null;\nexport var idleSprites = null;\nexport var staticTextureDrawer = null;\nexport var staticSprites = null;\nexport function lazyGenerateTextures() {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var _a, cellPadding, cellSize, textureSize, uncachedIATG, uncachedSTG;\n        var _b, _c;\n        return tslib_1.__generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _a = getCellSizes(), cellPadding = _a.cellPadding, cellSize = _a.cellSize;\n                    textureSize = cellSize + 2 * cellPadding;\n                    textureTileSize = textureSize;\n                    uncachedIATG = idleAnimationTextureGeneratorFactory(textureSize, cellPadding, idleAnimationNumFrames);\n                    return [4 /*yield*/, cacheTextureGenerator(\"idle\", uncachedIATG, textureSize, idleAnimationNumFrames, {\n                            maxWidth: spriteSize,\n                            maxHeight: spriteSize\n                        })];\n                case 1:\n                    (_b = _d.sent(), idleAnimationTextureDrawer = _b.drawer, idleSprites = _b.caches);\n                    uncachedSTG = staticTextureGeneratorFactory(textureSize, cellPadding);\n                    return [4 /*yield*/, cacheTextureGenerator(\"static\", uncachedSTG, textureSize, 14 /* LAST_MARKER */, { maxWidth: spriteSize, maxHeight: spriteSize })];\n                case 2:\n                    (_c = _d.sent(), staticTextureDrawer = _c.drawer, staticSprites = _c.caches);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n//# sourceMappingURL=animation.js.map","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { staticDevicePixelRatio } from \"../utils/static-display\";\nimport { deg2rad, remap, smoothpulse } from \"./animation-helpers\";\nimport { roundedRectangle } from \"./canvas-helper\";\nimport { blackHoleInnerRadius, blackHoleInnerRed, blackHoleOuterRadius, blackHoleOuterRed, blackHoleRadius, borderRadius, flagCircleRadius, glowAlpha, glowFactor, innerCircleRadius, numberCircleRadius, numberFontSizeFactor, numberFontTopShiftFactor, numInnerRects, safetyBufferFactor, thickLine, thinLine, white } from \"./constants\";\nexport function idleAnimationTextureGeneratorFactory(textureSize, cellPadding, numFrames) {\n    var size = (textureSize - cellPadding * 2) * safetyBufferFactor;\n    var halfSize = size / 2;\n    return function (idx, ctx) {\n        ctx.clearRect(0, 0, textureSize, textureSize);\n        var ts = Math.floor(idx % numFrames) / numFrames;\n        ctx.save();\n        ctx.translate(textureSize / 2, textureSize / 2);\n        roundedRectangle(ctx, -halfSize, -halfSize, size, size, size * borderRadius);\n        ctx.clip();\n        ctx.strokeStyle = white;\n        ctx.lineWidth = size * thinLine;\n        var magnification = remap(0, 1, 1, 1.4, smoothpulse(0, 0.5, 0.5, 1, ts));\n        for (var i = 0; i < numInnerRects; i++) {\n            ctx.save();\n            var offset = ((numInnerRects - i) / numInnerRects) * 0.14;\n            var angle = 5 +\n                i * 9 +\n                (i * (i + 1)) / 2 +\n                smoothpulse(0, 0.5 + offset, 0.5 + offset, 1, ts) * 180;\n            ctx.rotate(deg2rad(-angle));\n            var subsize = size * magnification * (0.92 - 0.13 * i);\n            roundedRectangle(ctx, -subsize / 2, -subsize / 2, subsize, subsize, subsize * borderRadius);\n            ctx.stroke();\n            ctx.restore();\n        }\n        ctx.restore();\n    };\n}\nexport function staticTextureGeneratorFactory(textureSize, cellPadding) {\n    var fullSize = textureSize - cellPadding * 2;\n    var size = fullSize * safetyBufferFactor;\n    var halfSize = size / 2;\n    // If a texture needs a glow effect, the routine can paint\n    // to this canvas instead. This temporary canvas will\n    // be blitted to the output canvas twice — once with a blur,\n    // and once without, yielding a glow.\n    var cvs2 = document.createElement(\"canvas\");\n    cvs2.width = cvs2.height = textureSize * staticDevicePixelRatio;\n    var ctx2 = cvs2.getContext(\"2d\");\n    ctx2.scale(staticDevicePixelRatio, staticDevicePixelRatio);\n    var blurIntensity = glowFactor;\n    var blitOnTop = true;\n    return function (idx, ctx) {\n        ctx2.clearRect(0, 0, textureSize, textureSize);\n        ctx2.save();\n        ctx.save();\n        ctx.translate(textureSize / 2, textureSize / 2);\n        ctx2.translate(textureSize / 2, textureSize / 2);\n        if (idx === 0 /* OUTLINE */) {\n            ctx2.strokeStyle = \"white\";\n            // Outline\n            // Size: 650, stroke: 20, radius: 76\n            roundedRectangle(ctx2, -halfSize, -halfSize, size, size, size * borderRadius);\n            ctx2.lineWidth = size * thickLine;\n            ctx2.stroke();\n        }\n        else if (idx === 12 /* INNER_CIRCLE */) {\n            ctx2.strokeStyle = \"white\";\n            ctx2.lineWidth = size * thickLine;\n            var radius = size * innerCircleRadius;\n            ctx2.beginPath();\n            ctx2.moveTo(radius, 0);\n            ctx2.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx2.closePath();\n            ctx2.stroke();\n        }\n        else if (idx >= 1 && idx <= 8) {\n            ctx2.strokeStyle = white;\n            ctx2.lineWidth = size * thickLine;\n            ctx2.beginPath();\n            ctx2.arc(0, 0, halfSize * numberCircleRadius, 0, 2 * Math.PI);\n            ctx2.closePath();\n            ctx2.stroke();\n            ctx2.fillStyle = white;\n            ctx2.textAlign = \"center\";\n            ctx2.textBaseline = \"middle\";\n            ctx2.font = size * numberFontSizeFactor + \"px/1 \\\"Space Mono\\\", sans-serif\";\n            var measure = ctx2.measureText(\"\" + idx);\n            var yOffset = size * numberFontTopShiftFactor;\n            if (\"actualBoundingBoxAscent\" in measure) {\n                yOffset =\n                    (measure.actualBoundingBoxAscent - measure.actualBoundingBoxDescent) /\n                        2;\n            }\n            ctx2.fillText(\"\" + idx, 0, yOffset);\n        }\n        else if (idx === 9 /* FLASH */) {\n            roundedRectangle(ctx2, -halfSize, -halfSize, size, size, size * borderRadius);\n            ctx2.clip();\n            ctx2.fillStyle = white;\n            ctx2.fillRect(-halfSize, -halfSize, size, size);\n        }\n        else if (idx === 10 /* MINE */) {\n            var radius = halfSize * safetyBufferFactor * blackHoleOuterRadius;\n            // Pink disc to form outer pink ring\n            ctx.fillStyle = \"rgb(\" + blackHoleOuterRed + \")\";\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.fill();\n            // Black disc as background for the radial ring.\n            radius *= blackHoleInnerRadius;\n            ctx.fillStyle = \"black\";\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.fill();\n            // Radial gradient on top of black disc to form the\n            // inner red ring.\n            var gradient = ctx.createRadialGradient(0, 0, radius * blackHoleRadius, 0, 0, radius);\n            gradient.addColorStop(0, \"rgba(\" + blackHoleInnerRed + \", .5)\");\n            gradient.addColorStop(1, \"rgba(\" + blackHoleInnerRed + \", .1)\");\n            ctx.fillStyle = gradient;\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.fill();\n            // Black disc for the actual black hole\n            radius *= blackHoleRadius;\n            ctx.fillStyle = \"black\";\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.fill();\n        }\n        else if (idx === 11 /* FOCUS */) {\n            ctx.globalAlpha = 0.3;\n            roundedRectangle(ctx, -halfSize, -halfSize, size, size, size * borderRadius);\n            ctx.clip();\n            ctx.fillStyle = white;\n            ctx.fillRect(-halfSize, -halfSize, size, size);\n        }\n        else if (idx === 13 /* DOT */) {\n            ctx2.fillStyle = \"white\";\n            ctx2.lineWidth = size * thickLine;\n            var radius = size * flagCircleRadius;\n            ctx2.beginPath();\n            ctx2.moveTo(radius, 0);\n            ctx2.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx2.closePath();\n            ctx2.fill();\n        }\n        ctx.restore();\n        ctx2.restore();\n        ctx.save();\n        var blur = (textureSize * staticDevicePixelRatio * blurIntensity).toFixed(1);\n        ctx.filter = \"blur(\" + blur + \"px)\";\n        ctx.globalAlpha = glowAlpha;\n        ctx.drawImage(cvs2, 0, 0, cvs2.width, cvs2.height, 0, 0, textureSize, textureSize);\n        if (blitOnTop) {\n            ctx.filter = \"none\";\n            ctx.globalAlpha = 1;\n            ctx.drawImage(cvs2, 0, 0, cvs2.width, cvs2.height, 0, 0, textureSize, textureSize);\n        }\n        ctx.restore();\n    };\n}\n//# sourceMappingURL=texture-generators.js.map"],"names":["_a","MessageChannel","port1","port2","task","Promise","resolve","uid","Math","random","addEventListener","f","ev","data","removeEventListener","postMessage","start","toSelector","classList","split","map","k","join","getCellSizes","cellPadding","parseFloat","getComputedStyle","document","documentElement","getPropertyValue","cellSize","defaultSizeConstraints","maxWidth","maxHeight","TEXTURE_CACHE_IDB_PREFIX","cacheTextureGenerator","name","drawTexture","textureSize","numFrames","constraints","tslib_1.__awaiter","this","fullConstraints","maxFramesPerRow","maxRowsPerSprite","maxFramesPerSprite","buffers","prefix","expectedVersion","caches","_loop_1","i","tslib_1.__generator","label","tslib_1.__assign","floor","staticDevicePixelRatio","version","get","sent","noCache","del","createBuffers","set","Array","length","image","Image","src","URL","createObjectURL","Blob","type","r","onload","drawer","idx","targetCtx","sprite","idxInSprite","xIndex","yIndex","img","x","y","drawImage","numSprites","_loop_2","spriteIndex","ceil","framesLeftToCache","width","height","canvas","ctx","indexInSprite","frame","blob","buffer","createElement","getContext","Error","scale","save","translate","restore","toBlob","Response","arrayBuffer","push","roundedRectangle","radius","beginPath","moveTo","arc","PI","lineTo","closePath","bottomBar","querySelector","bottomBarStyle","bottomBarRect","getBoundingClientRect","bottomBarMargins","marginTop","marginBottom","bottomBarHeight","topBar","topBarStyle","topBarRect","topBarMargins","topBarHeight","_b","_c","_d","textureTileSize","size","safetyBufferFactor","halfSize","clearRect","ts","borderRadius","clip","strokeStyle","white","lineWidth","thinLine","magnification","remap","smoothpulse","numInnerRects","offset","angle","rotate","deg2rad","subsize","stroke","idleAnimationTextureGeneratorFactory","idleAnimationNumFrames","spriteSize","idleAnimationTextureDrawer","idleSprites","cvs2","ctx2","blurIntensity","glowFactor","thickLine","innerCircleRadius","numberCircleRadius","fillStyle","textAlign","textBaseline","font","numberFontSizeFactor","measure","measureText","yOffset","numberFontTopShiftFactor","actualBoundingBoxAscent","actualBoundingBoxDescent","fillText","fillRect","blackHoleOuterRadius","blackHoleOuterRed","fill","blackHoleInnerRadius","gradient","createRadialGradient","blackHoleRadius","addColorStop","blackHoleInnerRed","globalAlpha","flagCircleRadius","blur","toFixed","filter","glowAlpha","staticTextureGeneratorFactory","staticTextureDrawer","staticSprites","evt","once","animation","done"],"mappings":"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"}