{"version":3,"file":"chunk-070e2192.js","sources":["../src/main/utils/shaderbox.ts"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nexport function setShader(gl, program, type, src) {\n    var shader = gl.createShader(type);\n    if (!shader) {\n        throw Error(\"Could not create shader\");\n    }\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        throw new Error(\"Error compiling \" + (type === gl.VERTEX_SHADER ? \"vertex\" : \"fragment\") + \" shader: \" + gl.getShaderInfoLog(shader));\n    }\n    gl.attachShader(program, shader);\n}\nvar defaultOpts = {\n    antialias: true,\n    alpha: true,\n    scaling: devicePixelRatio,\n    timing: function (ts) { return ts; },\n    uniforms: [],\n    mesh: [\n        {\n            data: new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),\n            dimensions: 2,\n            name: \"pos\"\n        }\n    ],\n    indices: [0, 1, 2, 2, 1, 3],\n    clearColor: [1, 0, 0, 1]\n};\nvar defaultAddTextureOpts = {\n    interpolation: \"LINEAR\"\n};\nvar ShaderBox = /** @class */ (function () {\n    function ShaderBox(_vertexShader, _fragmentShader, opts) {\n        var e_1, _a, e_2, _b, _c;\n        if (opts === void 0) { opts = {}; }\n        this._vertexShader = _vertexShader;\n        this._fragmentShader = _fragmentShader;\n        this._uniformLocations = new Map();\n        this._uniformValues = new Map();\n        this._textures = new Map();\n        this._vbos = new Map();\n        this._opts = tslib_1.__assign({}, defaultOpts, opts, { canvas: opts.canvas || document.createElement(\"canvas\") });\n        this._opts.uniforms = this._opts.uniforms.slice();\n        this.canvas = this._opts.canvas;\n        this._gl = this.canvas.getContext(\"webgl\", {\n            antialias: this._opts.antialias,\n            alpha: this._opts.alpha\n        });\n        if (!this._gl) {\n            throw Error(\"No support for WebGL\");\n        }\n        var program = this._gl.createProgram();\n        if (!program) {\n            throw Error(\"Could not create program\");\n        }\n        setShader(this._gl, program, this._gl.VERTEX_SHADER, this._vertexShader);\n        setShader(this._gl, program, this._gl.FRAGMENT_SHADER, this._fragmentShader);\n        this._gl.linkProgram(program);\n        if (!this._gl.getProgramParameter(program, this._gl.LINK_STATUS)) {\n            throw Error(\"Couldn\\u2019t link program: \" + this._gl.getProgramInfoLog(program));\n        }\n        this._gl.validateProgram(program);\n        if (!this._gl.getProgramParameter(program, this._gl.VALIDATE_STATUS)) {\n            throw Error(\"Couldn\\u2019t validate program: \" + this._gl.getProgramInfoLog(program));\n        }\n        this._gl.useProgram(program);\n        this._opts.uniforms.push(\"iResolution\");\n        try {\n            for (var _d = tslib_1.__values(this._opts.uniforms), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var name_1 = _e.value;\n                var uniformLocation = this._gl.getUniformLocation(program, name_1);\n                if (!uniformLocation) {\n                    console.error(\"Couldn\\u2019t find uniform location of \" + name_1);\n                    continue;\n                }\n                this._uniformLocations.set(name_1, uniformLocation);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _f = tslib_1.__values(this._opts.mesh), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var data = _g.value;\n                var vbo = this._gl.createBuffer();\n                if (!vbo) {\n                    throw Error(\"Could not create VBO\");\n                }\n                this._vbos.set(data.name, vbo);\n                this._gl.bindBuffer(this._gl.ARRAY_BUFFER, vbo);\n                this._gl.bufferData(this._gl.ARRAY_BUFFER, data.data || new Float32Array([]), this._gl[data.usage || \"STATIC_DRAW\"]);\n                var loc = this._gl.getAttribLocation(program, data.name);\n                this._gl.vertexAttribPointer(loc, data.dimensions, this._gl.FLOAT, false, 0, 0);\n                this._gl.enableVertexAttribArray(loc);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var idxVbo = this._gl.createBuffer();\n        this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, idxVbo);\n        this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this._opts.indices), this._gl.STATIC_DRAW);\n        (_c = this._gl).clearColor.apply(_c, tslib_1.__spread(this._opts.clearColor));\n    }\n    ShaderBox.prototype.updateVBO = function (name, data) {\n        this._assertVBOExists(name);\n        var vbo = this._vbos.get(name);\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, vbo);\n        this._gl.bufferData(this._gl.ARRAY_BUFFER, data, this._gl.STATIC_DRAW);\n    };\n    ShaderBox.prototype.resize = function () {\n        var rect = this.canvas.getBoundingClientRect();\n        this.canvas.width = rect.width * this._opts.scaling;\n        this.canvas.height = rect.height * this._opts.scaling;\n        this.setUniform2f(\"iResolution\", [this.canvas.width, this.canvas.height]);\n        this._gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    };\n    ShaderBox.prototype.hasUniform = function (name) {\n        return this._uniformLocations.has(name);\n    };\n    Object.defineProperty(ShaderBox.prototype, \"uniforms\", {\n        get: function () {\n            return tslib_1.__spread(this._uniformLocations.keys());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShaderBox.prototype.getUniform = function (name) {\n        this._assertUniformExists(name);\n        return this._uniformValues.get(name);\n    };\n    ShaderBox.prototype.setUniform1i = function (name, val) {\n        if (!this.hasUniform(name)) {\n            return;\n        }\n        this._gl.uniform1i(this._getUniformLocation(name), val);\n        this._uniformValues.set(name, [val]);\n    };\n    ShaderBox.prototype.setUniform1f = function (name, val) {\n        if (!this.hasUniform(name)) {\n            return;\n        }\n        this._gl.uniform1f(this._getUniformLocation(name), val);\n        this._uniformValues.set(name, [val]);\n    };\n    ShaderBox.prototype.setUniform2f = function (name, val) {\n        if (!this.hasUniform(name)) {\n            return;\n        }\n        this._gl.uniform2fv(this._getUniformLocation(name), val);\n        this._uniformValues.set(name, val);\n    };\n    ShaderBox.prototype.setUniform3f = function (name, val) {\n        if (!this.hasUniform(name)) {\n            return;\n        }\n        this._gl.uniform3fv(this._getUniformLocation(name), val);\n        this._uniformValues.set(name, val);\n    };\n    ShaderBox.prototype.setUniform4f = function (name, val) {\n        if (!this.hasUniform(name)) {\n            return;\n        }\n        this._gl.uniform4fv(this._getUniformLocation(name), val);\n        this._uniformValues.set(name, val);\n    };\n    ShaderBox.prototype.draw = function () {\n        // tslint:disable-next-line:no-bitwise\n        this._gl.clear(this._gl.COLOR_BUFFER_BIT | this._gl.DEPTH_BUFFER_BIT);\n        this._gl.drawElements(this._gl.TRIANGLES, this._opts.indices.length, this._gl.UNSIGNED_SHORT, 0);\n    };\n    ShaderBox.prototype.getUniformNames = function () {\n        return tslib_1.__spread(this._uniformLocations.keys());\n    };\n    ShaderBox.prototype.activateTexture = function (name, unit) {\n        if (!this._textures.has(name)) {\n            throw Error(\"Unknown texture name\");\n        }\n        var texture = this._textures.get(name);\n        this._gl.activeTexture(this._gl[\"TEXTURE\" + unit]);\n        this._gl.bindTexture(this._gl.TEXTURE_2D, texture);\n    };\n    ShaderBox.prototype.addTexture = function (name, imageData, userOpts) {\n        if (userOpts === void 0) { userOpts = {}; }\n        var opts = tslib_1.__assign({}, defaultAddTextureOpts, userOpts);\n        if (!this._textures.has(name)) {\n            var texture_1 = this._gl.createTexture();\n            if (!texture_1) {\n                throw Error(\"Could not create texture\");\n            }\n            this._textures.set(name, texture_1);\n        }\n        var texture = this._textures.get(name);\n        this._gl.bindTexture(this._gl.TEXTURE_2D, texture);\n        // Disable mipmapping\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl[opts.interpolation]);\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl[opts.interpolation]);\n        // Repeat\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n        this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, imageData);\n    };\n    ShaderBox.prototype._assertVBOExists = function (name) {\n        if (!this._vbos.has(name)) {\n            throw Error(\"Unknown VBO \" + name);\n        }\n    };\n    ShaderBox.prototype._assertUniformExists = function (name) {\n        if (!this._uniformLocations.has(name)) {\n            throw Error(\"Unknown uniform \" + name);\n        }\n    };\n    ShaderBox.prototype._getUniformLocation = function (name) {\n        this._assertUniformExists(name);\n        return this._uniformLocations.get(name);\n    };\n    return ShaderBox;\n}());\nexport default ShaderBox;\n//# sourceMappingURL=shaderbox.js.map"],"names":["setShader","gl","program","type","src","shader","createShader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","VERTEX_SHADER","getShaderInfoLog","attachShader","defaultOpts","antialias","alpha","scaling","devicePixelRatio","timing","ts","uniforms","mesh","data","Float32Array","dimensions","name","indices","clearColor","defaultAddTextureOpts","interpolation","ShaderBox","_vertexShader","_fragmentShader","opts","e_1","_a","e_2","_b","_c","this","_uniformLocations","Map","_uniformValues","_textures","_vbos","_opts","tslib_1.__assign","canvas","document","createElement","slice","_gl","getContext","createProgram","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","validateProgram","VALIDATE_STATUS","useProgram","push","_d","tslib_1.__values","_e","next","done","name_1","value","uniformLocation","getUniformLocation","set","console","error","e_1_1","return","call","_f","_g","vbo","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","usage","loc","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","e_2_1","idxVbo","ELEMENT_ARRAY_BUFFER","Uint16Array","STATIC_DRAW","apply","tslib_1.__spread","prototype","updateVBO","_assertVBOExists","get","resize","rect","getBoundingClientRect","width","height","setUniform2f","viewport","hasUniform","has","Object","defineProperty","keys","enumerable","configurable","getUniform","_assertUniformExists","setUniform1i","val","uniform1i","_getUniformLocation","setUniform1f","uniform1f","uniform2fv","setUniform3f","uniform3fv","setUniform4f","uniform4fv","draw","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawElements","TRIANGLES","length","UNSIGNED_SHORT","getUniformNames","activateTexture","unit","texture","activeTexture","bindTexture","TEXTURE_2D","addTexture","imageData","userOpts","texture_1","createTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE"],"mappings":"uFAaO,SAASA,EAAUC,EAAIC,EAASC,EAAMC,GACzC,IAAIC,EAASJ,EAAGK,aAAaH,GAC7B,IAAKE,EACD,MAAME,MAAM,2BAIhB,GAFAN,EAAGO,aAAaH,EAAQD,GACxBH,EAAGQ,cAAcJ,IACZJ,EAAGS,mBAAmBL,EAAQJ,EAAGU,gBAClC,MAAM,IAAIJ,MAAM,oBAAsBJ,IAASF,EAAGW,cAAgB,SAAW,YAAc,YAAcX,EAAGY,iBAAiBR,IAEjIJ,EAAGa,aAAaZ,EAASG,GAE7B,IAAIU,EAAc,CACdC,WAAW,EACXC,OAAO,EACPC,QAASC,iBACTC,OAAQ,SAAUC,GAAM,OAAOA,GAC/BC,SAAU,GACVC,KAAM,CACF,CACIC,KAAM,IAAIC,aAAa,EAAE,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,IACjDC,WAAY,EACZC,KAAM,QAGdC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,WAAY,CAAC,EAAG,EAAG,EAAG,IAEtBC,EAAwB,CACxBC,cAAe,UAEfC,EAA2B,WAC3B,SAASA,EAAUC,EAAeC,EAAiBC,GAC/C,IAAIC,EAAKC,EAAIC,EAAKC,EAAIC,EAetB,QAda,IAATL,IAAmBA,EAAO,IAC9BM,KAAKR,cAAgBA,EACrBQ,KAAKP,gBAAkBA,EACvBO,KAAKC,kBAAoB,IAAIC,IAC7BF,KAAKG,eAAiB,IAAID,IAC1BF,KAAKI,UAAY,IAAIF,IACrBF,KAAKK,MAAQ,IAAIH,IACjBF,KAAKM,MAAQC,WAAiB,GAAIjC,EAAaoB,EAAM,CAAEc,OAAQd,EAAKc,QAAUC,SAASC,cAAc,YACrGV,KAAKM,MAAMzB,SAAWmB,KAAKM,MAAMzB,SAAS8B,QAC1CX,KAAKQ,OAASR,KAAKM,MAAME,OACzBR,KAAKY,IAAMZ,KAAKQ,OAAOK,WAAW,QAAS,CACvCtC,UAAWyB,KAAKM,MAAM/B,UACtBC,MAAOwB,KAAKM,MAAM9B,SAEjBwB,KAAKY,IACN,MAAM9C,MAAM,wBAEhB,IAAIL,EAAUuC,KAAKY,IAAIE,gBACvB,IAAKrD,EACD,MAAMK,MAAM,4BAKhB,GAHAP,EAAUyC,KAAKY,IAAKnD,EAASuC,KAAKY,IAAIzC,cAAe6B,KAAKR,eAC1DjC,EAAUyC,KAAKY,IAAKnD,EAASuC,KAAKY,IAAIG,gBAAiBf,KAAKP,iBAC5DO,KAAKY,IAAII,YAAYvD,IAChBuC,KAAKY,IAAIK,oBAAoBxD,EAASuC,KAAKY,IAAIM,aAChD,MAAMpD,MAAM,0BAAiCkC,KAAKY,IAAIO,kBAAkB1D,IAG5E,GADAuC,KAAKY,IAAIQ,gBAAgB3D,IACpBuC,KAAKY,IAAIK,oBAAoBxD,EAASuC,KAAKY,IAAIS,iBAChD,MAAMvD,MAAM,8BAAqCkC,KAAKY,IAAIO,kBAAkB1D,IAEhFuC,KAAKY,IAAIU,WAAW7D,GACpBuC,KAAKM,MAAMzB,SAAS0C,KAAK,eACzB,IACI,IAAK,IAAIC,EAAKC,WAAiBzB,KAAKM,MAAMzB,UAAW6C,EAAKF,EAAGG,QAASD,EAAGE,KAAMF,EAAKF,EAAGG,OAAQ,CAC3F,IAAIE,EAASH,EAAGI,MACZC,EAAkB/B,KAAKY,IAAIoB,mBAAmBvE,EAASoE,GACtDE,EAIL/B,KAAKC,kBAAkBgC,IAAIJ,EAAQE,GAH/BG,QAAQC,MAAM,qCAA4CN,IAMtE,MAAOO,GAASzC,EAAM,CAAEwC,MAAOC,WAE3B,IACQV,IAAOA,EAAGE,OAAShC,EAAK4B,EAAGa,SAASzC,EAAG0C,KAAKd,WAE1C,GAAI7B,EAAK,MAAMA,EAAIwC,OAEjC,IACI,IAAK,IAAII,EAAKd,WAAiBzB,KAAKM,MAAMxB,MAAO0D,EAAKD,EAAGZ,QAASa,EAAGZ,KAAMY,EAAKD,EAAGZ,OAAQ,CACvF,IAAI5C,EAAOyD,EAAGV,MACVW,EAAMzC,KAAKY,IAAI8B,eACnB,IAAKD,EACD,MAAM3E,MAAM,wBAEhBkC,KAAKK,MAAM4B,IAAIlD,EAAKG,KAAMuD,GAC1BzC,KAAKY,IAAI+B,WAAW3C,KAAKY,IAAIgC,aAAcH,GAC3CzC,KAAKY,IAAIiC,WAAW7C,KAAKY,IAAIgC,aAAc7D,EAAKA,MAAQ,IAAIC,aAAa,IAAKgB,KAAKY,IAAI7B,EAAK+D,OAAS,gBACrG,IAAIC,EAAM/C,KAAKY,IAAIoC,kBAAkBvF,EAASsB,EAAKG,MACnDc,KAAKY,IAAIqC,oBAAoBF,EAAKhE,EAAKE,WAAYe,KAAKY,IAAIsC,OAAO,EAAO,EAAG,GAC7ElD,KAAKY,IAAIuC,wBAAwBJ,IAGzC,MAAOK,GAASvD,EAAM,CAAEsC,MAAOiB,WAE3B,IACQZ,IAAOA,EAAGZ,OAAS9B,EAAKyC,EAAGF,SAASvC,EAAGwC,KAAKC,WAE1C,GAAI1C,EAAK,MAAMA,EAAIsC,OAEjC,IAAIkB,EAASrD,KAAKY,IAAI8B,eACtB1C,KAAKY,IAAI+B,WAAW3C,KAAKY,IAAI0C,qBAAsBD,GACnDrD,KAAKY,IAAIiC,WAAW7C,KAAKY,IAAI0C,qBAAsB,IAAIC,YAAYvD,KAAKM,MAAMnB,SAAUa,KAAKY,IAAI4C,cAChGzD,EAAKC,KAAKY,KAAKxB,WAAWqE,MAAM1D,EAAI2D,WAAiB1D,KAAKM,MAAMlB,aAkHrE,OAhHAG,EAAUoE,UAAUC,UAAY,SAAU1E,EAAMH,GAC5CiB,KAAK6D,iBAAiB3E,GACtB,IAAIuD,EAAMzC,KAAKK,MAAMyD,IAAI5E,GACzBc,KAAKY,IAAI+B,WAAW3C,KAAKY,IAAIgC,aAAcH,GAC3CzC,KAAKY,IAAIiC,WAAW7C,KAAKY,IAAIgC,aAAc7D,EAAMiB,KAAKY,IAAI4C,cAE9DjE,EAAUoE,UAAUI,OAAS,WACzB,IAAIC,EAAOhE,KAAKQ,OAAOyD,wBACvBjE,KAAKQ,OAAO0D,MAAQF,EAAKE,MAAQlE,KAAKM,MAAM7B,QAC5CuB,KAAKQ,OAAO2D,OAASH,EAAKG,OAASnE,KAAKM,MAAM7B,QAC9CuB,KAAKoE,aAAa,cAAe,CAACpE,KAAKQ,OAAO0D,MAAOlE,KAAKQ,OAAO2D,SACjEnE,KAAKY,IAAIyD,SAAS,EAAG,EAAGrE,KAAKQ,OAAO0D,MAAOlE,KAAKQ,OAAO2D,SAE3D5E,EAAUoE,UAAUW,WAAa,SAAUpF,GACvC,OAAOc,KAAKC,kBAAkBsE,IAAIrF,IAEtCsF,OAAOC,eAAelF,EAAUoE,UAAW,WAAY,CACnDG,IAAK,WACD,OAAOJ,WAAiB1D,KAAKC,kBAAkByE,SAEnDC,YAAY,EACZC,cAAc,IAElBrF,EAAUoE,UAAUkB,WAAa,SAAU3F,GAEvC,OADAc,KAAK8E,qBAAqB5F,GACnBc,KAAKG,eAAe2D,IAAI5E,IAEnCK,EAAUoE,UAAUoB,aAAe,SAAU7F,EAAM8F,GAC1ChF,KAAKsE,WAAWpF,KAGrBc,KAAKY,IAAIqE,UAAUjF,KAAKkF,oBAAoBhG,GAAO8F,GACnDhF,KAAKG,eAAe8B,IAAI/C,EAAM,CAAC8F,MAEnCzF,EAAUoE,UAAUwB,aAAe,SAAUjG,EAAM8F,GAC1ChF,KAAKsE,WAAWpF,KAGrBc,KAAKY,IAAIwE,UAAUpF,KAAKkF,oBAAoBhG,GAAO8F,GACnDhF,KAAKG,eAAe8B,IAAI/C,EAAM,CAAC8F,MAEnCzF,EAAUoE,UAAUS,aAAe,SAAUlF,EAAM8F,GAC1ChF,KAAKsE,WAAWpF,KAGrBc,KAAKY,IAAIyE,WAAWrF,KAAKkF,oBAAoBhG,GAAO8F,GACpDhF,KAAKG,eAAe8B,IAAI/C,EAAM8F,KAElCzF,EAAUoE,UAAU2B,aAAe,SAAUpG,EAAM8F,GAC1ChF,KAAKsE,WAAWpF,KAGrBc,KAAKY,IAAI2E,WAAWvF,KAAKkF,oBAAoBhG,GAAO8F,GACpDhF,KAAKG,eAAe8B,IAAI/C,EAAM8F,KAElCzF,EAAUoE,UAAU6B,aAAe,SAAUtG,EAAM8F,GAC1ChF,KAAKsE,WAAWpF,KAGrBc,KAAKY,IAAI6E,WAAWzF,KAAKkF,oBAAoBhG,GAAO8F,GACpDhF,KAAKG,eAAe8B,IAAI/C,EAAM8F,KAElCzF,EAAUoE,UAAU+B,KAAO,WAEvB1F,KAAKY,IAAI+E,MAAM3F,KAAKY,IAAIgF,iBAAmB5F,KAAKY,IAAIiF,kBACpD7F,KAAKY,IAAIkF,aAAa9F,KAAKY,IAAImF,UAAW/F,KAAKM,MAAMnB,QAAQ6G,OAAQhG,KAAKY,IAAIqF,eAAgB,IAElG1G,EAAUoE,UAAUuC,gBAAkB,WAClC,OAAOxC,WAAiB1D,KAAKC,kBAAkByE,SAEnDnF,EAAUoE,UAAUwC,gBAAkB,SAAUjH,EAAMkH,GAClD,IAAKpG,KAAKI,UAAUmE,IAAIrF,GACpB,MAAMpB,MAAM,wBAEhB,IAAIuI,EAAUrG,KAAKI,UAAU0D,IAAI5E,GACjCc,KAAKY,IAAI0F,cAActG,KAAKY,IAAI,UAAYwF,IAC5CpG,KAAKY,IAAI2F,YAAYvG,KAAKY,IAAI4F,WAAYH,IAE9C9G,EAAUoE,UAAU8C,WAAa,SAAUvH,EAAMwH,EAAWC,QACvC,IAAbA,IAAuBA,EAAW,IACtC,IAAIjH,EAAOa,WAAiB,GAAIlB,EAAuBsH,GACvD,IAAK3G,KAAKI,UAAUmE,IAAIrF,GAAO,CAC3B,IAAI0H,EAAY5G,KAAKY,IAAIiG,gBACzB,IAAKD,EACD,MAAM9I,MAAM,4BAEhBkC,KAAKI,UAAU6B,IAAI/C,EAAM0H,GAE7B,IAAIP,EAAUrG,KAAKI,UAAU0D,IAAI5E,GACjCc,KAAKY,IAAI2F,YAAYvG,KAAKY,IAAI4F,WAAYH,GAE1CrG,KAAKY,IAAIkG,cAAc9G,KAAKY,IAAI4F,WAAYxG,KAAKY,IAAImG,mBAAoB/G,KAAKY,IAAIlB,EAAKJ,gBACvFU,KAAKY,IAAIkG,cAAc9G,KAAKY,IAAI4F,WAAYxG,KAAKY,IAAIoG,mBAAoBhH,KAAKY,IAAIlB,EAAKJ,gBAEvFU,KAAKY,IAAIkG,cAAc9G,KAAKY,IAAI4F,WAAYxG,KAAKY,IAAIqG,eAAgBjH,KAAKY,IAAIsG,eAC9ElH,KAAKY,IAAIkG,cAAc9G,KAAKY,IAAI4F,WAAYxG,KAAKY,IAAIuG,eAAgBnH,KAAKY,IAAIsG,eAC9ElH,KAAKY,IAAIwG,WAAWpH,KAAKY,IAAI4F,WAAY,EAAGxG,KAAKY,IAAIyG,KAAMrH,KAAKY,IAAIyG,KAAMrH,KAAKY,IAAI0G,cAAeZ,IAEtGnH,EAAUoE,UAAUE,iBAAmB,SAAU3E,GAC7C,IAAKc,KAAKK,MAAMkE,IAAIrF,GAChB,MAAMpB,MAAM,eAAiBoB,IAGrCK,EAAUoE,UAAUmB,qBAAuB,SAAU5F,GACjD,IAAKc,KAAKC,kBAAkBsE,IAAIrF,GAC5B,MAAMpB,MAAM,mBAAqBoB,IAGzCK,EAAUoE,UAAUuB,oBAAsB,SAAUhG,GAEhD,OADAc,KAAK8E,qBAAqB5F,GACnBc,KAAKC,kBAAkB6D,IAAI5E,IAE/BK"}