{"version":3,"file":"index-83a40a35.js","sources":["../src/main/rendering/webgl-renderer/index.ts","../src/main/rendering/webgl-renderer/vertex.glsl","../src/main/rendering/webgl-renderer/fragment.glsl"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\n// tslint:disable:no-bitwise Forgive me, father.\nimport { getCanvas } from \"src/main/utils/canvas-pool\";\nimport { getBarHeights, getCellSizes } from \"src/main/utils/cell-sizing\";\nimport ShaderBox from \"src/main/utils/shaderbox\";\nimport { staticDevicePixelRatio } from \"src/main/utils/static-display\";\nimport { bind } from \"src/utils/bind\";\nimport { idleSprites, processDoneCallback, staticSprites, textureTileSize } from \"../animation\";\nimport { easeInOutCubic, easeOutQuad, remap } from \"../animation-helpers\";\nimport { fadedLinesAlpha, fadeInAnimationLength, fadeOutAnimationLength, flashInAnimationLength, flashOutAnimationLength, idleAnimationLength, idleAnimationNumFrames, revealedAlpha, spriteSize } from \"../constants\";\nimport fragmentShader from \"./fragment.glsl\";\nimport vertexShader from \"./vertex.glsl\";\nfunction generateCoords(x1, y1, x2, y2) {\n    return [x1, y1, x1, y2, x2, y1, x2, y2];\n}\nfunction generateGameFieldMesh(numTilesX, numTilesY, tileSize) {\n    // TODO optimize me (avoid allocations)\n    var vertices = [];\n    for (var y = 0; y < numTilesY; y++) {\n        for (var x = 0; x < numTilesX; x++) {\n            vertices.push.apply(vertices, tslib_1.__spread(generateCoords(x * tileSize, y * tileSize, (x + 1) * tileSize, (y + 1) * tileSize)));\n        }\n    }\n    return new Float32Array(vertices);\n}\nfunction generateVertexIndices(numTilesX, numTilesY) {\n    // TODO optimize me (avoid allocations)\n    var indices = [];\n    for (var i = 0; i < numTilesX * numTilesY; i++) {\n        indices.push(i * 4, i * 4 + 1, i * 4 + 2, i * 4 + 2, i * 4 + 1, i * 4 + 3);\n    }\n    return indices;\n}\nvar WebGlRenderer = /** @class */ (function () {\n    function WebGlRenderer() {\n        this._lastFocus = [-1, -1];\n        this._renderLoopRunning = false;\n    }\n    WebGlRenderer.prototype.createCanvas = function () {\n        this._canvas = getCanvas(\"webgl\");\n        return this._canvas;\n    };\n    WebGlRenderer.prototype.init = function (numTilesX, numTilesY) {\n        this._numTilesX = numTilesX;\n        this._numTilesY = numTilesY;\n        this._updateTileSize();\n        this._initShaderBox();\n        this._setupMesh();\n        this._setupTextures();\n        this._shaderBox.setUniform1f(\"sprite_size\", spriteSize);\n        this._shaderBox.setUniform1f(\"tile_size\", textureTileSize * staticDevicePixelRatio);\n        this._shaderBox.setUniform1f(\"idle_frames\", idleAnimationNumFrames);\n        this._updateFadeoutParameters();\n        this._startRenderLoop();\n    };\n    WebGlRenderer.prototype.updateFirstRect = function (rect) {\n        this._assertShaderBox();\n        this._shaderBox.setUniform2f(\"offset\", [\n            rect.left * staticDevicePixelRatio,\n            rect.top * staticDevicePixelRatio\n        ]);\n    };\n    WebGlRenderer.prototype.stop = function () {\n        this._renderLoopRunning = false;\n    };\n    WebGlRenderer.prototype.onResize = function () {\n        if (!this._shaderBox) {\n            return;\n        }\n        this._shaderBox.resize();\n        if (this._updateTileSize()) {\n            this._updateGridMesh();\n        }\n        this._updateFadeoutParameters();\n    };\n    WebGlRenderer.prototype.beforeUpdate = function () {\n        // Nothing to do here\n    };\n    WebGlRenderer.prototype.afterUpdate = function () {\n        // Nothing to do here\n    };\n    WebGlRenderer.prototype.beforeCell = function (x, y, cell, animationList, ts) {\n        // Nothing to do here\n    };\n    WebGlRenderer.prototype.afterCell = function (x, y, cell, animationList, ts) {\n        // Nothing to do here\n    };\n    WebGlRenderer.prototype.render = function (x, y, cell, animation, ts) {\n        this._assertShaderBox();\n        // @ts-ignore\n        this[animation.name](x, y, cell, animation, ts);\n        this._updateDynamicTileData(x, y);\n    };\n    WebGlRenderer.prototype.setFocus = function (x, y) {\n        if (this._lastFocus[0] > -1 && this._lastFocus[1] > -1) {\n            var _a = tslib_1.__read(this._lastFocus, 2), lastX = _a[0], lastY = _a[1];\n            var dynamicTileDataA = this._getDynamicTileDataAForTile(lastX, lastY);\n            dynamicTileDataA[0 /* BITFIELD */] &= ~(1 << 0 /* FOCUS */);\n            this._updateDynamicTileData(lastX, lastY);\n        }\n        if (x > -1 && y > -1) {\n            var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n            dynamicTileDataA[0 /* BITFIELD */] |= 1 << 0 /* FOCUS */;\n            this._updateDynamicTileData(x, y);\n            this._lastFocus = [x, y];\n        }\n    };\n    WebGlRenderer.prototype._updateFadeoutParameters = function () {\n        var _a = getBarHeights(), topBarHeight = _a.topBarHeight, bottomBarHeight = _a.bottomBarHeight;\n        this._shaderBox.setUniform2f(\"paddings\", [\n            topBarHeight * staticDevicePixelRatio,\n            bottomBarHeight * staticDevicePixelRatio\n        ]);\n    };\n    WebGlRenderer.prototype._updateTileSize = function () {\n        var _a = getCellSizes(), cellPadding = _a.cellPadding, cellSize = _a.cellSize;\n        var newTileSize = (cellSize + 2 * cellPadding) * staticDevicePixelRatio;\n        var hasChanged = newTileSize !== this._tileSize;\n        this._tileSize = newTileSize;\n        return hasChanged;\n    };\n    WebGlRenderer.prototype._updateDynamicTileData = function (x, y) {\n        // Go through the _other_ 3 vertices and copy the (potentially modified)\n        // dynamic tile data from vertex 0 to their respective buffers.\n        // TODO: We can prevent running these loops by switching to ANGLE instanced\n        // rendering.\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        for (var i = 1; i < 4; i++) {\n            this._getDynamicTileDataAForTile(x, y, i).set(dynamicTileDataA);\n            this._getDynamicTileDataBForTile(x, y, i).set(dynamicTileDataB);\n        }\n    };\n    WebGlRenderer.prototype[0 /* IDLE */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = idleAnimationLength;\n        var normalized = ((ts - animation.start) / animationLength) % 1;\n        dynamicTileDataA[3 /* IDLE_ANIMATION_TIME */] = normalized;\n        var fadeInNormalized = (ts - (animation.fadeStart || 0)) / fadeInAnimationLength;\n        if (fadeInNormalized > 1) {\n            fadeInNormalized = 1;\n        }\n        dynamicTileDataB[3 /* BOXES_OPACITY */] = remap(0, 1, 1, fadedLinesAlpha, easeOutQuad(fadeInNormalized));\n        dynamicTileDataA[1 /* DOT */] = remap(0, 1, 1, 0, easeOutQuad(fadeInNormalized));\n        dynamicTileDataB[2 /* BORDER_OPACITY */] = 1;\n        dynamicTileDataA[0 /* BITFIELD */] |=\n            1 << 1 /* INNER_CIRCLE */;\n    };\n    WebGlRenderer.prototype[6 /* FLAGGED */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = idleAnimationLength;\n        var normalized = ((ts - animation.start) / animationLength) % 1;\n        dynamicTileDataA[3 /* IDLE_ANIMATION_TIME */] = normalized;\n        var fadeOutNormalized = (ts - (animation.fadeStart || 0)) / fadeOutAnimationLength;\n        if (fadeOutNormalized > 1) {\n            fadeOutNormalized = 1;\n        }\n        dynamicTileDataB[3 /* BOXES_OPACITY */] = remap(0, 1, fadedLinesAlpha, 1, easeOutQuad(fadeOutNormalized));\n        dynamicTileDataA[1 /* DOT */] = remap(0, 1, 0, 1, easeOutQuad(fadeOutNormalized));\n        dynamicTileDataB[2 /* BORDER_OPACITY */] = 1;\n        dynamicTileDataB[2 /* BORDER_OPACITY */] = 1;\n    };\n    WebGlRenderer.prototype[5 /* NUMBER */] = function (x, y, cell, animation, ts) {\n        if (ts < animation.start) {\n            return;\n        }\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        dynamicTileDataA[2 /* STATIC_TILE */] = cell.touchingMines;\n        dynamicTileDataB[2 /* BORDER_OPACITY */] =\n            cell.touchingMines <= 0 ? revealedAlpha : 0;\n        dynamicTileDataA[0 /* BITFIELD */] &= ~(1 << 1 /* INNER_CIRCLE */);\n        dynamicTileDataA[1 /* DOT */] = 0;\n        dynamicTileDataB[3 /* BOXES_OPACITY */] = 0;\n    };\n    WebGlRenderer.prototype[3 /* HIGHLIGHT_IN */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = fadeInAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            normalized = 0;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        dynamicTileDataB[0 /* HIGHLIGHT_OPACITY */] = easeOutQuad(normalized);\n    };\n    WebGlRenderer.prototype[4 /* HIGHLIGHT_OUT */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = fadeOutAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            normalized = 0;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        dynamicTileDataB[0 /* HIGHLIGHT_OPACITY */] =\n            1 - easeOutQuad(normalized);\n    };\n    WebGlRenderer.prototype[1 /* FLASH_IN */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = flashInAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            return;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        dynamicTileDataB[1 /* FLASH_OPACITY */] = easeOutQuad(normalized);\n    };\n    WebGlRenderer.prototype[2 /* FLASH_OUT */] = function (x, y, cell, animation, ts) {\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        var animationLength = flashOutAnimationLength;\n        var normalized = (ts - animation.start) / animationLength;\n        if (normalized < 0) {\n            return;\n        }\n        if (normalized > 1) {\n            processDoneCallback(animation);\n            normalized = 1;\n        }\n        dynamicTileDataB[1 /* FLASH_OPACITY */] =\n            1 - easeInOutCubic(normalized);\n    };\n    WebGlRenderer.prototype[7 /* MINED */] = function (x, y, cell, animation, ts) {\n        if (ts < animation.start) {\n            return;\n        }\n        var dynamicTileDataA = this._getDynamicTileDataAForTile(x, y);\n        var dynamicTileDataB = this._getDynamicTileDataBForTile(x, y);\n        dynamicTileDataA[2 /* STATIC_TILE */] = 10 /* MINE */;\n        dynamicTileDataA[0 /* BITFIELD */] &= ~(1 << 1 /* INNER_CIRCLE */);\n        dynamicTileDataB[2 /* BORDER_OPACITY */] = 0;\n        dynamicTileDataB[3 /* BOXES_OPACITY */] = 0;\n    };\n    WebGlRenderer.prototype._getDynamicTileDataAForTile = function (x, y, vertex) {\n        if (vertex === void 0) { vertex = 0; }\n        var tileOffset = y * this._numTilesX + x;\n        var vertexOffset = tileOffset * 4 + vertex;\n        var floatOffset = vertexOffset * 4;\n        var byteOffset = floatOffset * 4;\n        return new Float32Array(this._dynamicTileDataA.buffer, byteOffset, 4);\n    };\n    WebGlRenderer.prototype._getDynamicTileDataBForTile = function (x, y, vertex) {\n        if (vertex === void 0) { vertex = 0; }\n        var tileOffset = y * this._numTilesX + x;\n        var vertexOffset = tileOffset * 4 + vertex;\n        var floatOffset = vertexOffset * 4;\n        var byteOffset = floatOffset * 4;\n        return new Float32Array(this._dynamicTileDataB.buffer, byteOffset, 4);\n    };\n    WebGlRenderer.prototype._initShaderBox = function () {\n        /**\n         * We are setting up a WebGL context here.\n         *\n         * Per-vertex attributes:\n         * - `pos`: Position of the vertex on screen in pixels. Starting at (0, 0)\n         *   in the top left corner.\n         * - `tile_uv`: UV coordinates within each tile. Top-left corner is (0, 0),\n         *   bottom right corner is (1, 1).\n         * - `dynamic_tile_data_a`: A `vec4` containing data according to the\n         *   `DynamicTileDataA` enum\n         * - `dynamic_tile_data_b`: A `vec4` containing data according to the\n         *   `DynamicTileDataB` enum\n         *\n         * Uniforms:\n         * - `offset`: Offset of the first tile’s top left corner from the top-left\n         *   corner of the screen. This effectively makes sure our WebGL tiles are\n         *   perfectly aligned with the inivisible table, including scroll position.\n         * - `idle_sprites[n]`: Up to 4 texture samplers for the sprite of the idle\n         *   animation.\n         * - `static_sprite`: Sampler for the static sprite.\n         * - `sprite_size`: A single float for the size of the sprites in pixels\n         *   (they are assumed to be square).\n         * - `tile_size`: A single float for the size of each tile in pixels.\n         * - `idle_frames`: Number of frames the idle animation has.\n         * - `paddings`: The vertical and horizontal paddings that define the fade-out.\n         */\n        this._shaderBox = new ShaderBox(vertexShader, fragmentShader, {\n            canvas: this._canvas,\n            uniforms: [\n                \"offset\",\n                \"idle_sprites[0]\",\n                \"idle_sprites[1]\",\n                \"idle_sprites[2]\",\n                \"idle_sprites[3]\",\n                \"static_sprite\",\n                \"sprite_size\",\n                \"tile_size\",\n                \"idle_frames\",\n                \"paddings\"\n            ],\n            scaling: staticDevicePixelRatio,\n            antialias: false,\n            mesh: [\n                {\n                    dimensions: 2,\n                    name: \"pos\"\n                },\n                {\n                    dimensions: 2,\n                    name: \"tile_uv\"\n                },\n                {\n                    name: \"dynamic_tile_data_a\",\n                    dimensions: 4,\n                    usage: \"DYNAMIC_DRAW\"\n                },\n                {\n                    name: \"dynamic_tile_data_b\",\n                    dimensions: 4,\n                    usage: \"DYNAMIC_DRAW\"\n                }\n            ],\n            indices: generateVertexIndices(this._numTilesX, this._numTilesY),\n            clearColor: [0, 0, 0, 0]\n        });\n        this._shaderBox.resize();\n    };\n    WebGlRenderer.prototype._updateGridMesh = function () {\n        var mesh = generateGameFieldMesh(this._numTilesX, this._numTilesY, this._tileSize);\n        this._shaderBox.updateVBO(\"pos\", mesh);\n        return mesh;\n    };\n    WebGlRenderer.prototype._setupMesh = function () {\n        var _this = this;\n        var mesh = this._updateGridMesh();\n        // Repeat these UVs for all tiles.\n        var uvs = [0, 1, 0, 0, 1, 1, 1, 0];\n        this._shaderBox.updateVBO(\"tile_uv\", mesh.map(function (_, idx) { return uvs[idx % uvs.length]; }));\n        var numTiles = this._numTilesX * this._numTilesY;\n        this._dynamicTileDataA = new Float32Array(new Array(numTiles * 4 * 4).fill(0).map(function (_, idx) {\n            var fieldIdx = Math.floor(idx / 16);\n            var x = fieldIdx % _this._numTilesX;\n            var y = Math.floor(fieldIdx / _this._numTilesX);\n            switch (idx % 4) {\n                case 0 /* BITFIELD */:\n                    return 1 << 1 /* INNER_CIRCLE */;\n                case 1 /* DOT */:\n                    return 0;\n                case 2 /* STATIC_TILE */:\n                    return -1; // Equivalent to “unrevealed”\n                case 3 /* IDLE_ANIMATION_TIME */:\n                    return 0;\n                default:\n                    return -1; // Never reached. Just to make TypeScript happy.\n            }\n        }));\n        this._shaderBox.updateVBO(\"dynamic_tile_data_a\", this._dynamicTileDataA);\n        this._dynamicTileDataB = new Float32Array(new Array(numTiles * 4 * 4).fill(0).map(function (_, idx) {\n            switch (idx % 4) {\n                case 2 /* BORDER_OPACITY */:\n                    return 1;\n                case 3 /* BOXES_OPACITY */:\n                    return fadedLinesAlpha;\n                case 1 /* FLASH_OPACITY */:\n                    return 0;\n                case 0 /* HIGHLIGHT_OPACITY */:\n                    return 0;\n                default:\n                    return -1; // Never reached. Just to make TypeScript happy.\n            }\n        }));\n        this._shaderBox.updateVBO(\"dynamic_tile_data_b\", this._dynamicTileDataB);\n    };\n    WebGlRenderer.prototype._setupTextures = function () {\n        // Due to the way internal WebGL state handling works, we\n        // have to add all the textures first before we bind them.\n        this._shaderBox.addTexture(\"staticSprite\", staticSprites[0]);\n        for (var i = 0; i < idleSprites.length; i++) {\n            this._shaderBox.addTexture(\"idleSprite\" + i, idleSprites[i]);\n        }\n        for (var i = 0; i < idleSprites.length; i++) {\n            this._shaderBox.activateTexture(\"idleSprite\" + i, i + 1);\n            this._shaderBox.setUniform1i(\"idle_sprites[\" + i + \"]\", i + 1);\n        }\n        this._shaderBox.activateTexture(\"staticSprite\", 0);\n        this._shaderBox.setUniform1i(\"static_sprite\", 0);\n    };\n    WebGlRenderer.prototype._startRenderLoop = function () {\n        this._renderLoopRunning = true;\n        requestAnimationFrame(this._renderLoop);\n    };\n    WebGlRenderer.prototype._assertShaderBox = function () {\n        if (!this._shaderBox) {\n            throw Error(\"ShaderBox not initialized for WebGL renderer\");\n        }\n    };\n    WebGlRenderer.prototype._renderLoop = function () {\n        this._shaderBox.updateVBO(\"dynamic_tile_data_a\", this._dynamicTileDataA);\n        this._shaderBox.updateVBO(\"dynamic_tile_data_b\", this._dynamicTileDataB);\n        this._shaderBox.draw();\n        if (this._renderLoopRunning) {\n            requestAnimationFrame(this._renderLoop);\n        }\n    };\n    tslib_1.__decorate([\n        bind\n    ], WebGlRenderer.prototype, \"_renderLoop\", null);\n    return WebGlRenderer;\n}());\nexport default WebGlRenderer;\n//# sourceMappingURL=index.js.map","export default \"\\n#version 100\\nprecision highp float;attribute vec2 pos;attribute vec2 tile_uv;attribute vec4 dynamic_tile_data_a;attribute vec4 dynamic_tile_data_b;varying vec2 uv;varying vec2 coords;varying vec2 iResolution2;varying vec4 dynamic_tile_data_a2;varying vec4 dynamic_tile_data_b2;uniform vec2 offset;uniform vec2 iResolution;void main(){vec2 a=vec2(0.,1.)+vec2(1.,-1.)*(pos+offset)/iResolution;gl_Position=vec4(a*2.-vec2(1.),0.0,1.0);uv=tile_uv;iResolution2=iResolution;dynamic_tile_data_a2=dynamic_tile_data_a;dynamic_tile_data_b2=dynamic_tile_data_b;}\";","export default \"\\n#version 100\\nprecision highp float;varying vec2 uv;varying vec4 dynamic_tile_data_a2;varying vec4 dynamic_tile_data_b2;varying vec2 iResolution2;uniform float idle_frames;uniform float sprite_size;uniform float tile_size;uniform sampler2D idle_sprites[4];uniform sampler2D static_sprite;uniform vec2 paddings;float a=floor(sprite_size/tile_size);float b=a*a;vec2 c(float d){return vec2(mod(d,a),floor(d/a));}bool e(float f,int g){return floor(mod(f,pow(2.,float(g+1)))/pow(2.,float(g)))>0.;}void main(){vec4 h=vec4(1.);vec4 i=vec4(vec3(0.),1.);vec4 j=vec4(0.);vec4 k=vec4(vec3(109.,205.,218.)/255.,1.);vec2 l=vec2(0.,1.)+vec2(1.,-1.)*uv;float m=e(dynamic_tile_data_a2.x,0)?1.:0.;float n=e(dynamic_tile_data_a2.x,1)?1.:0.;float o=dynamic_tile_data_a2.y;float p=dynamic_tile_data_a2.z;float q=dynamic_tile_data_a2.w;float r=dynamic_tile_data_b2.x;float s=dynamic_tile_data_b2.y;float t=dynamic_tile_data_b2.z;float u=dynamic_tile_data_b2.w;float f;if(p<0.){float v=floor(q*idle_frames);int w=int(floor(v/b));float x=mod(v,b);float y=mod(x,a);float z=floor(x/a);vec2 A=(vec2(y,z)+l)*tile_size/sprite_size;if(w==0){vec4 B=texture2D(idle_sprites[0],A);gl_FragColor=mix(gl_FragColor,B,B.a*u);}else if(w==1){vec4 B=texture2D(idle_sprites[1],A);gl_FragColor=mix(gl_FragColor,B,B.a*u);}else if(w==2){vec4 B=texture2D(idle_sprites[2],A);gl_FragColor=mix(gl_FragColor,B,B.a*u);}else if(w==3){vec4 B=texture2D(idle_sprites[3],A);gl_FragColor=mix(gl_FragColor,B,B.a*u);}}else if(p>=1.&&p<=8.){vec2 C=(c(p)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,C);gl_FragColor=mix(gl_FragColor,B,B.a);}{vec2 D=(c(0.)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,D);gl_FragColor=mix(gl_FragColor,B,B.a*t);}{vec2 D=(c(12.)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,D);gl_FragColor=mix(gl_FragColor,B,B.a*n);}{vec2 D=(c(13.)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,D);gl_FragColor=mix(gl_FragColor,B,B.a*o);}{gl_FragColor=mix(gl_FragColor,gl_FragColor*k,r);}{if(p==10.){vec2 E=(c(10.)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,E);gl_FragColor=mix(gl_FragColor,B,B.a);}}{vec2 F=(c(9.)+l)*tile_size/sprite_size;vec4 B=texture2D(static_sprite,F);gl_FragColor=mix(gl_FragColor,B,B.a*s);}{vec2 G=(c(11.)+l)*tile_size/sprite_size;vec4 H=mix(gl_FragColor,h,texture2D(static_sprite,G).a*m);gl_FragColor=H;}{vec2 I=vec2(1.0,1.3);float J=smoothstep(paddings.y*I.x,paddings.y*I.y,gl_FragCoord.y)*(1.-smoothstep(iResolution2.y-paddings.x*I.y,iResolution2.y-paddings.x*I.x,gl_FragCoord.y));gl_FragColor=mix(j,gl_FragColor,J);}}\";"],"names":["generateVertexIndices","numTilesX","numTilesY","indices","i","push","WebGlRenderer","this","_lastFocus","_renderLoopRunning","prototype","createCanvas","_canvas","getCanvas","init","_numTilesX","_numTilesY","_updateTileSize","_initShaderBox","_setupMesh","_setupTextures","_shaderBox","setUniform1f","spriteSize","textureTileSize","staticDevicePixelRatio","idleAnimationNumFrames","_updateFadeoutParameters","_startRenderLoop","updateFirstRect","rect","_assertShaderBox","setUniform2f","left","top","stop","onResize","resize","_updateGridMesh","beforeUpdate","afterUpdate","beforeCell","x","y","cell","animationList","ts","afterCell","render","animation","name","_updateDynamicTileData","setFocus","_a","tslib_1.__read","lastX","lastY","_getDynamicTileDataAForTile","getBarHeights","topBarHeight","bottomBarHeight","getCellSizes","cellPadding","newTileSize","cellSize","hasChanged","_tileSize","dynamicTileDataA","dynamicTileDataB","_getDynamicTileDataBForTile","set","animationLength","idleAnimationLength","normalized","start","fadeInNormalized","fadeStart","fadeInAnimationLength","remap","fadedLinesAlpha","easeOutQuad","fadeOutNormalized","fadeOutAnimationLength","touchingMines","revealedAlpha","processDoneCallback","flashInAnimationLength","flashOutAnimationLength","easeInOutCubic","vertex","byteOffset","Float32Array","_dynamicTileDataA","buffer","_dynamicTileDataB","ShaderBox","canvas","uniforms","scaling","antialias","mesh","dimensions","usage","clearColor","tileSize","x1","y1","x2","y2","vertices","apply","tslib_1.__spread","generateGameFieldMesh","updateVBO","_this","uvs","map","_","idx","length","numTiles","Array","fill","fieldIdx","Math","floor","addTexture","staticSprites","idleSprites","activateTexture","setUniform1i","requestAnimationFrame","_renderLoop","Error","draw","tslib_1.__decorate","bind"],"mappings":"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"}